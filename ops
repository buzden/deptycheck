{"author":{"id":"c8b5e6f4594a39a69d740ff06f6530160b48ff53db7027c22c4091f811b01812"},"ops":[{"type":6,"timestamp":1727089069,"nonce":"CsM5u1t9x9DMQcyka71z0iiX5LI=","metadata":{"github-id":"UCE_lAHOEt7lWM6Xh_iYzmVgGyE"},"target":"6d132575f345189d966b6e7e2afe6722fe4b15f6279ad94bcc152d727e7beec3","message":"Say, I have a type\n```idris\ndata X : Fin n -\u003e Fin m -\u003e Type where ...\n```\n\nand want to derive generator for it with all arguments given. I'd like to write something like\n```idris\ngenX : {n : Nat} -\u003e (f : Fin n) -\u003e {m : Nat} -\u003e (g : Fin m) -\u003e Gen MaybeEmpty $ X f g\ngenX = deriveGen\n```\n\nbut now I'm beaten with an error that the order of arguments must be the same as in type, i.e. to be the following:\n\n```idris\ngenX : {m : Nat} -\u003e {n : Nat} -\u003e (f : Fin n) -\u003e (g : Fin m) -\u003e Gen MaybeEmpty $ X f g\n```\n\nwhich is not logical, nor convenient. The first type of signature should be supported too.","files":null},{"type":5,"timestamp":1727088691,"nonce":"O8aiJXZwIVX2LpHpjut887KoRAE=","metadata":{"github-id":"LE_lADOEt7lWM6Xh_iYzwAAAANYBOxT"},"added":["part: derivation"],"removed":[]},{"type":5,"timestamp":1727088691,"nonce":"Do+gAl/+5RbaRK6aLKqRZ6tDqoM=","metadata":{"github-id":"LE_lADOEt7lWM6Xh_iYzwAAAANYBOxd"},"added":["status: feature request"],"removed":[]},{"type":5,"timestamp":1727088691,"nonce":"qRnd7vhwsKGDI4x8DR16pxaW3lA=","metadata":{"github-id":"LE_lADOEt7lWM6Xh_iYzwAAAANYBOxj"},"added":["issue: compilation error"],"removed":[]},{"type":3,"timestamp":1727089763,"nonce":"LSTUGARXSMMDYh4xxHglhPTk2ts=","metadata":{"github-id":"IC_kwDOEt7lWM6NI0s0","github-url":"https://github.com/buzden/deptycheck/issues/202#issuecomment-2367900468"},"message":"Implementation detail: external generators, then, should be also allowed to have abritrary orders, thus we need to either store the signature of a generator, or permutation of its arguments in order to call them (including information of whether those arguments are explicit or implicit).\n\nAdditional advancement of being able to do this is that we would be able to use as externals arbitrary user `%hint`'s, with any order of arguments.","files":null},{"type":3,"timestamp":1743418702,"nonce":"Kegb7ZHRF1CljIAUdSHU6XPlwR8=","metadata":{"github-id":"IC_kwDOEt7lWM6k2-v0","github-url":"https://github.com/buzden/deptycheck/issues/202#issuecomment-2765876212"},"message":"Another thought is whether arbitrary order should be acceptable for explicit arguments **and** for generated arguments in a dependent pair being returned","files":null},{"type":4,"timestamp":1744046284,"nonce":"1zut0LvFIqa6+1E4M/lQg+C0HZo=","metadata":{"github-id":"CE_lADOEt7lWM6Xh_iYzwAAAAP-rFwA"},"status":2}]}