{"author":{"id":"3af9e2655ad9f293988512be60886dcee65d101213a8f77d6e1aec75c05cdd9f"},"ops":[{"type":1,"timestamp":1661538093,"nonce":"cJX9yZXsweqdb9uB06Mot8lspKw=","metadata":{"github-id":"I_kwDOEt7lWM5QnvzB","github-url":"https://github.com/buzden/deptycheck/issues/24","origin":"github"},"title":"Incorrect implicit value is supplied to a constructor leading to a unification error","message":"# Steps to reproduce\n\nConsider the following module which asks for derivation of a generator: \n\n```idris\nimport Test.DepTyCheck.Gen.Auto\nimport Decidable.Equality\n\n%default total\n\n%language ElabReflection\n\n%hint\nUsedConstructorDerivator : ConstructorDerivator\nUsedConstructorDerivator = LeastEffort\n\ndata X : Type where\n  MkX : Nat -\u003e Bool -\u003e X\n\ndata Y : X -\u003e Type where\n  MkY : Y (MkX n b)\n\n\ndata Z : Type where\n  MkZ : (x : X) -\u003e\n           Y x =\u003e\n           Z\n\ndata W : Z -\u003e Z -\u003e Type where\n  MkW : W (MkZ (MkX n False)) (MkZ (MkX n True))\n\ngenW : Fuel -\u003e\n            (a : Z) -\u003e\n            (b : Z) -\u003e\n            Gen $ W a b\ngenW = deriveGen\n```\n\n# Expected behaviour\n\nAll derives and typechecks OR a comprehensible error message giving a hint on what is wrong.\n\n# Observed behaviour\n\n```\nError: While processing right hand side of genW. Error during reflection: While processing right hand side of $resolved11799 \u003cMain.W\u003e[0, 1]. While processing left hand side of $resolved11799,\u003cMain.W\u003e[0, 1],\u003c\u003cMain.MkW\u003e\u003e. When unifying:\n    MkX ?n True\nand:\n    MkX ?to_be_deceqed^^n0 True\nPattern variable to_be_deceqed^^n0 unifies with: ?n [locals in scope: ^outmost-fuel^, a, b, {arg:926}, {arg:923}, ^fuel_arg^].\n\nSuggestion: Use the same name for both pattern variables, since they unify.\n```","files":null}]}