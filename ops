{"author":{"id":"c8b5e6f4594a39a69d740ff06f6530160b48ff53db7027c22c4091f811b01812"},"ops":[{"type":5,"timestamp":1660315549,"nonce":"aZib2bBGoeMCeuChSnNJxRwq8sE=","metadata":{"github-id":"LE_lADOEt7lWM5PtYepzwAAAAGr8kH4"},"added":["status: confirmed bug"],"removed":[]},{"type":5,"timestamp":1660315549,"nonce":"Ayzem4iYCL7I/A+NgIGibEyrqqU=","metadata":{"github-id":"LE_lADOEt7lWM5PtYepzwAAAAGr8kH8"},"added":["part: derivation"],"removed":[]},{"type":5,"timestamp":1660315549,"nonce":"o3AoxE/poieIfTL64/253pWk27I=","metadata":{"github-id":"LE_lADOEt7lWM5PtYepzwAAAAGr8kH_"},"added":["issue: compilation error"],"removed":[]},{"type":5,"timestamp":1660315549,"nonce":"jj8g6oDURGG6FVALO4mIYeZ6EJA=","metadata":{"github-id":"LE_lADOEt7lWM5PtYepzwAAAAGr8kID"},"added":["derive: core"],"removed":[]},{"type":2,"timestamp":1660315626,"nonce":"4LNap+QsVTX2xFF+j3lqkZIVmEc=","metadata":{"github-id":"RTE_lADOEt7lWM5PtYepzwAAAAGr8mOd"},"title":"Derivation fails when constructor in dependent type index has an unnamed auto implicit argument","was":"Derivation fails when constructor in dependent type index has an unnamed auto implicit argument"},{"type":3,"timestamp":1660819356,"nonce":"d5JBov4LsCCk/kSIpPzjyj04n2o=","metadata":{"github-id":"IC_kwDOEt7lWM5IrafK","github-url":"https://github.com/buzden/deptycheck/issues/14#issuecomment-1219340234"},"message":"Just for a record: a fundamental deep reason for why this issue happens is that `IBindVar` takes `String` rather than `Name`, i.e. we can bind only `UN (Basic _)` names.\n\nEdwin once said that there is no reason to not to support any `Name` in `IBindVar` and I even tried this but didn't finish.\n\nBy the way, the current definition of `IBindVar` is the reason why I use `UN` for in fact generated names. To use a symbol that can't be got from a parser is the idea of Edwin ;-)","files":null},{"type":5,"timestamp":1694696644,"nonce":"bQ9sHL2ernm+TwyeImtaC98Dlzk=","metadata":{"github-id":"LE_lADOEt7lWM5PtYepzwAAAAJqOXGM"},"added":["status: blocked"],"removed":[]},{"type":5,"timestamp":1694696644,"nonce":"njiy+vO0OWmIeo+Qd/I57DBu/24=","metadata":{"github-id":"LE_lADOEt7lWM5PtYepzwAAAAJqOXGa"},"added":["status: upstream"],"removed":[]},{"type":5,"timestamp":1712156560,"nonce":"gaV9J+sl7TDYNkxx0Qq/DLRaUnk=","metadata":{"github-id":"UNLE_lADOEt7lWM5PtYepzwAAAALfvpP3"},"added":[],"removed":["status: blocked"]},{"type":5,"timestamp":1712156560,"nonce":"aRib8lnGHAjqdPYHxZyCPysby7Q=","metadata":{"github-id":"LE_lADOEt7lWM5PtYepzwAAAALfvpQF"},"added":["status: workarounded"],"removed":[]},{"type":4,"timestamp":1712160046,"nonce":"ksm0q5glo3Ns91rLvUTT/1hqVa0=","metadata":{"github-id":"CE_lADOEt7lWM5PtYepzwAAAALfzKyi"},"status":2}]}