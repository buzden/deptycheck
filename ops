{"author":{"id":"c8b5e6f4594a39a69d740ff06f6530160b48ff53db7027c22c4091f811b01812"},"ops":[{"type":1,"timestamp":1660045251,"nonce":"GLjn634D+UURaHvnqAQxOsQe0jo=","metadata":{"github-id":"I_kwDOEt7lWM5PdfLL","github-url":"https://github.com/buzden/deptycheck/issues/3","origin":"github"},"title":"Generators produce too similar results, i.e. distribution of generated values is poor","message":"# Problem\n\nNow the main function of getting particular data from generators of type `a` gives a lazy list of type `a` being given some seed. These results are too likely to be very similar and to prefer data constructors declared first.\n\n# Suggestion\n\nSuggestion is to not to have `LazyList` as the main generation data structure; it is suggested to store the structure of generator composition (approximately like `LzList` does) and to traverse it deeply using random seed state each time a value is requested.\n\nUsing this we lose the property of possibly full generation of all values, but practically there are too many of them, thus no need in it, actually.\n\nAlso, there will be no need to store the length in `LzList`-like data structure and in indexing function.","files":null}]}