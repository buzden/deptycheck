{"author":{"id":"3af9e2655ad9f293988512be60886dcee65d101213a8f77d6e1aec75c05cdd9f"},"ops":[{"type":3,"timestamp":1686739812,"nonce":"ST34EheIc96uOvTIWVGlxgXNw5Q=","metadata":{"github-id":"IC_kwDOEt7lWM5e1BTL","github-url":"https://github.com/buzden/deptycheck/issues/74#issuecomment-1590957259"},"message":"Alternative approach to specifying completeness, assuming for now that we don't have (or care about) `Raw` generators, would be to do the following:\n1. Specify a special type describing descent down the generator tree, of form `data GenPath : Gen a -\u003e Type`\n2. Having this type, we can have a deterministic version of `unGenDeterministic : (g : Gen a) -\u003e GenPath g -\u003e Maybe a`\n3. Then the completeness property for generator `g` can be specified as a type isomorphic to a function of signature `(x : a) -\u003e (p : GenPath g ** unGenDeterministic g p === x)`","files":null}]}