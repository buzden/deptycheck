{"author":{"id":"c8b5e6f4594a39a69d740ff06f6530160b48ff53db7027c22c4091f811b01812"},"ops":[{"type":1,"timestamp":1754568459,"nonce":"0D4XBf2RA9TIMHBkA11E//CVZBM=","metadata":{"github-id":"I_kwDOEt7lWM7EtbHP","github-url":"https://github.com/buzden/deptycheck/issues/276","origin":"github"},"title":"Add a support for runtime analysis and ability to guide `oneof`-decisions","message":"In theory we can have an interface(s) passed to `unGen` or to its alternative, running in a monad (like existing `CanManageLabels`) having information about\n- start of generation\n- successful and unsuccessful end of generation (unsuccessful, however, can be managed through `MonadError`, as now already)\n- most importantly,\n  - the current decision point (index of the chosen `oneof` node of a generator tree, and indices of all previous decisions, thus identifying uniquely full path to the current decision point)\n  - possibly, a decision that is going to be made (we'll need to modify `pickWeighted` for that slightly)\n  - possibly, all the labels met in the generator tree before the current point (but, this can be made with existing `CanManageLabels` in a stateful monad)\n  - ability to override the default decision with our own one (based, say, on the statistics or whatever)\n\nMaybe, we can generalise `unGen` by not requiring `MonadRandom`, but the default implementation of the proposed interface should require it, thus calls to `randomFin` and `pickWeighted` would be inside this default implementation. Then, statistics-based one would be a named implementation requring external similarly typed implementation, just adding the statistics-management functionality.\n\nThis all can be used for collecting and analysing current decisions and their influence on, say, SUT's coverage, thus implementing a coverage-guided adjustments. It can, say, find that particular decisions influence positively on, say, SUT's coverage and increase probability of these decisions. Alternatively, it can increase probabilities of never visited choices in order to achieve better diversity of generated samples and increase the model coverage. Finally, it can just analyse the other decision algorithm and print its statistics afterwards. Existing labelling mechanism can be handy for such reports.","files":null}]}