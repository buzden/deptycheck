{"author":{"id":"c8b5e6f4594a39a69d740ff06f6530160b48ff53db7027c22c4091f811b01812"},"ops":[{"type":1,"timestamp":1727088691,"nonce":"XFLQZZwZ27PKih/fwzdDHyrel0I=","metadata":{"github-id":"I_kwDOEt7lWM6Xh_iY","github-url":"https://github.com/buzden/deptycheck/issues/202","origin":"github"},"title":"Support arbitrary order of arguments for derived generators","message":"Say, I have a type\n```idris\ndata X : Fin n -\u003e Fin m -\u003e Type where ...\n```\n\nand want to derive generator for it with all arguments given. I'd like to write something like\n```idris\ngenX : {n : Nat} -\u003e (f : Fin n) -\u003e {m : Nat} -\u003e (g : Fin m) -\u003e Gen MaybeEmpty $ X f g\ngenX = deriveGen\n```\n\nbut now I'm beaten with an error that order of arguments must be the same as in type, i.e. the following:\n\n```idris\ngenX : {m : Nat} -\u003e {n : Nat} -\u003e (f : Fin n) -\u003e (g : Fin m) -\u003e Gen MaybeEmpty $ X f g\n```\n\nwhich is not logical, nor convenient. The first type of signature should be supported too.","files":null}]}