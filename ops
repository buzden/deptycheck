{"author":{"id":"3af9e2655ad9f293988512be60886dcee65d101213a8f77d6e1aec75c05cdd9f"},"ops":[{"type":1,"timestamp":1660063000,"nonce":"8mn26C/v7thBzdITDsaYrL5iqQE=","metadata":{"github-id":"I_kwDOEt7lWM5Pe8mx","github-url":"https://github.com/buzden/deptycheck/issues/10","origin":"github"},"title":"Incorrect generators are derived for types that have `So` with a function application to a type indexed by another type","message":"# Steps to reproduce\n\nConsider the following module that defines a type and asks for a generator:\n\n```idris\nimport Test.DepTyCheck.Gen\nimport Test.DepTyCheck.Gen.Auto\n\n%default total\n\n%language ElabReflection\n\n%hint\nUsedConstructorDerivator : ConstructorDerivator\nUsedConstructorDerivator = LeastEffort\n\ndata BoolP : Unit -\u003e Type where\n  TrueP : BoolP x\n  FalseP : BoolP x\n\nf : BoolP x -\u003e Bool\nf TrueP = True\nf FalseP = False\n\ndata X : Type where\n  MkX : (u : Unit) -\u003e (x : BoolP u) -\u003e So (f x) -\u003e X\n\nfaultyGen : Fuel -\u003e Gen X\nfaultyGen = deriveGen\n```\n\n# Expected behaviour\n\nAll derives and typechecks OR a comprehensible error message giving a hint on what is wrong\n\n# Observed behaviour\n\nThe generator is derived, however it does not compile, instead an error occurs:\n```\nError: While processing right hand side of faultyGen. Error during reflection: While processing right hand side of $resolved11714,\u003cMain.X\u003e[]. While processing right hand side\nof $resolved11714,\u003cMain.X\u003e[],\u003c\u003cMain.MkX\u003e\u003e. Undefined name x.\n```","files":null}]}