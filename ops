{"author":{"id":"c8b5e6f4594a39a69d740ff06f6530160b48ff53db7027c22c4091f811b01812"},"ops":[{"type":1,"timestamp":1723541646,"nonce":"JcJlcCq5lWT/AApfBfj/UFDtt/Q=","metadata":{"github-id":"I_kwDOEt7lWM6SzH5j","github-url":"https://github.com/buzden/deptycheck/issues/176","origin":"github"},"title":"Support derivation of `NonEmpty`-generators, in case the type is indeed non-empty","message":"In fact, this can be done in two ways:\n- one is without any change in the derived code; one would just fail to typecheck against type signature with `NonEmpty` in case when actually there is a possibility of emptiness due to actual property of a type;\n- another is to analyse deeply during derivation a possibility of emptiness; may be hard to track, since indeed non-empty generator may use empty generator as a subgenerator in case it's baked by some nice alternative.\n\nSay, it should be okay to have\n```idris\ndata X : Nat -\u003e Type where\n  JustAValue : X n\n  WithFin : Fin n -\u003e X n\n\ngenX : Fuel -\u003e (n : Nat) -\u003e Gen NonEmpty $ X n\ngenX = deriveGen\n```","files":null}]}