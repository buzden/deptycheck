{"author":{"id":"3af9e2655ad9f293988512be60886dcee65d101213a8f77d6e1aec75c05cdd9f"},"ops":[{"type":3,"timestamp":1728068964,"nonce":"IcWt4wWACUmegge9wFoV7ZCITGQ=","metadata":{"github-id":"IC_kwDOEt7lWM6Ot57s","github-url":"https://github.com/buzden/deptycheck/issues/74#issuecomment-2394398444"},"message":"Additionally, instead of supplying a predictable implementation of `MonadRandom`, would be to instead figure out what notion of fairness does one need to impose upon the `MonadRandom`, and to write the proof in a conditional manner: given the proof of RNG fairness, we can show that our generator is complete. In this case, writing such proof for a special `MonadRandom` should be fairly easy, and with more complex generators one can find it sufficient to squint really hard at the fairness condition and at the generator, and conclude that it should, hopefully, hold.","files":null},{"type":6,"timestamp":1728072844,"nonce":"LWHV5Ua37fad0AjgWkcIeIlig0o=","metadata":{"github-id":"UCE_lALOEt7lWM6Ot57szlGFtFg"},"target":"45525cafa0fdf341e14f54fc6099292f1608fb08c90f2aeda13dc3666b7c4205","message":"Additionally, instead of supplying a predictable implementation of `MonadRandom`, would be to instead figure out what notion of fairness does one need to impose upon the `MonadRandom`, and to write the proof in a conditional manner: given the proof of RNG fairness, we can show that our generator is complete. In this case, writing such proof for a special `MonadRandom` should be fairly easy, and with more complex generators one can find it sufficient to squint really hard at the fairness condition and at the generator, and conclude that it should, hopefully, hold.\n\nMoreover, the fairness condition would also have a connection to `GenPath` representation: fairness should entail, for any path in a generator tree, existence of a seed that realizes that path.","files":null}]}