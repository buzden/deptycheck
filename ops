{"author":{"id":"c8b5e6f4594a39a69d740ff06f6530160b48ff53db7027c22c4091f811b01812"},"ops":[{"type":6,"timestamp":1712839728,"nonce":"buAUWXJ/LlGHYc4B54PxnX98Pfs=","metadata":{"github-id":"UCE_lAHOEt7lWM5Pdf9JzligL60"},"target":"711fb99391676c85f7d952a3a7a84a36993d2ce9f74eba2be56bfbcaf5bdc0be","message":"Currently derivation of generators with dependent types is supported, e.g.\n\n```idris\ngf : Fuel -\u003e (n : Nat) -\u003e Gen MaybeEmpty $ Fin n\ngf = deriveGen\n```\n\nBut derivation of generators for data types that are polymophic over types is not.\nE.g., this does not work:\n\n```idris\ngl : Fuel -\u003e (a : Type) -\u003e (Fuel -\u003e Gen MaybeEmpty a) =\u003e Gen MaybeEmpty $ List a\ngf = deriveGen\n```","files":null},{"type":6,"timestamp":1712840050,"nonce":"YR9iGRbn1LwUiE2PJPw5rrBp3/o=","metadata":{"github-id":"UCE_lAHOEt7lWM5Pdf9JzligTCg"},"target":"711fb99391676c85f7d952a3a7a84a36993d2ce9f74eba2be56bfbcaf5bdc0be","message":"Currently derivation of generators with dependent types is supported, e.g.\n\n```idris\ngf : Fuel -\u003e (n : Nat) -\u003e Gen MaybeEmpty $ Fin n\ngf = deriveGen\n```\n\nBut derivation of generators for data types that are polymophic over types is not.\nE.g., this does not work:\n\n```idris\ngl : Fuel -\u003e (a : Type) -\u003e (Fuel -\u003e Gen MaybeEmpty a) =\u003e Gen MaybeEmpty $ List a\ngf = deriveGen\n```\n\n---\n\nThe whole task can be divided to at least these subtasks:\n\n- [ ] Support for non-higher kinded given type arguments in covariant positions\n- [ ] Preferring given type arguments in the ordering in the least-effort constructor derivator in covariant positions\n- [ ] Support for non-higher kinded generated type arguments\n- [ ] Support for higher-kinded type arguments\n- [ ] Support for type arguments in the contravariant positions","files":null},{"type":6,"timestamp":1732113723,"nonce":"GGB0OyqVrxF+E6fh9Xvn8yW1Rls=","metadata":{"github-id":"UCE_lAHOEt7lWM5Pdf9JzmqTlA4"},"target":"711fb99391676c85f7d952a3a7a84a36993d2ce9f74eba2be56bfbcaf5bdc0be","message":"Currently derivation of generators with dependent types is supported, e.g.\n\n```idris\ngf : Fuel -\u003e (n : Nat) -\u003e Gen MaybeEmpty $ Fin n\ngf = deriveGen\n```\n\nBut derivation of generators for data types that are polymophic over types is not.\nE.g., this does not work:\n\n```idris\ngl : Fuel -\u003e (a : Type) -\u003e (Fuel -\u003e Gen MaybeEmpty a) =\u003e Gen MaybeEmpty $ List a\ngl = deriveGen\n```\n\n---\n\nThe whole task can be divided to at least these subtasks:\n\n- [ ] Support for non-higher kinded given type arguments in covariant positions\n- [ ] Preferring given type arguments in the ordering in the least-effort constructor derivator in covariant positions\n- [ ] Support for non-higher kinded generated type arguments\n- [ ] Support for higher-kinded type arguments\n- [ ] Support for type arguments in the contravariant positions","files":null},{"type":5,"timestamp":1660045423,"nonce":"o5zR9x94aRzBBP0NEGH+hqoau0U=","metadata":{"github-id":"LE_lADOEt7lWM5Pdf9JzwAAAAGqdJVd"},"added":["part: derivation"],"removed":[]},{"type":5,"timestamp":1660045423,"nonce":"kew+WmNCfSS0tEZ5VOfUMA70uyI=","metadata":{"github-id":"LE_lADOEt7lWM5Pdf9JzwAAAAGqdJVi"},"added":["status: feature request"],"removed":[]},{"type":2,"timestamp":1670612961,"nonce":"ESe5wgyNQUugGTVLUExrW73180c=","metadata":{"github-id":"RTE_lADOEt7lWM5Pdf9JzwAAAAHc6ZfO"},"title":"Add support for type-polymorphic data structures","was":"Add support for type-polymorphic data structures"},{"type":5,"timestamp":1670613017,"nonce":"Dvdv+i1GQ0o3c4Egb1aOGWWIdOI=","metadata":{"github-id":"LE_lADOEt7lWM5Pdf9JzwAAAAHc6a1N"},"added":["code: enhancement"],"removed":[]},{"type":5,"timestamp":1711456025,"nonce":"bN37sfSE6EP2ZUCMKxiO6NlLZrM=","metadata":{"github-id":"LE_lADOEt7lWM5Pdf9JzwAAAALaHI4c"},"added":["issue: compilation error"],"removed":[]}]}