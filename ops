{"author":{"id":"c8b5e6f4594a39a69d740ff06f6530160b48ff53db7027c22c4091f811b01812"},"ops":[{"type":6,"timestamp":1676296477,"nonce":"jEWTpKsdVIJBblEGqjWV2R4FY58=","metadata":{"github-id":"UCE_lAHOEt7lWM5RsD7kzjyu5O8"},"target":"0ccebfd8bafb4554626047696dc70b0d6ac189e05be66ca8eb3c42cde2ae3447","message":"[`pack`](https://github.com/stefan-hoeck/idris2-pack) is a modern, cool and convenient way to do what we were doing in an ad-hoc way\n\nMay contain as substeps:\n- [ ] Usage of `pack` in CI for selection of particular Idris version instead of custom `.idris-version` file\n- [ ] Usage of `pack` for installing external libraries like `elab-util` and `summary-stat` in `Makefile`, thus removing top-level `depends` dir\n- [ ] Usage of smaller libraries like `if-implicit-unsolved` and `mtl-tupled-impls` with installation of them from `Makefile`\n- [ ] Usage of `pack` for building `deptycheck` itself\n- [ ] Usage of `pack` for finding built `deptycheck` from tests, thus getting rid of ubiquitous `depends` dirs in `tests`\n- [ ] Moving small common definitions for testing to small libraries with local `pack.toml`s instead of ubiquitous symlinks to the common files","files":null},{"type":6,"timestamp":1676917072,"nonce":"nla9a3c7fg5aTPJaaJj54pjVebI=","metadata":{"github-id":"UCE_lAHOEt7lWM5RsD7kzj0drCM"},"target":"0ccebfd8bafb4554626047696dc70b0d6ac189e05be66ca8eb3c42cde2ae3447","message":"[`pack`](https://github.com/stefan-hoeck/idris2-pack) is a modern, cool and convenient way to do what we were doing in an ad-hoc way\n\nMay contain as substeps:\n- [x] Usage of `pack` in CI for selection of particular Idris version instead of custom `.idris-version` file\n- [ ] Usage of `pack` for installing external libraries like `elab-util` and `summary-stat` in `Makefile`, thus removing top-level `depends` dir\n- [ ] Usage of smaller libraries like `if-implicit-unsolved` and `mtl-tupled-impls` with installation of them from `Makefile`\n- [ ] Usage of `pack` for building `deptycheck` itself\n- [ ] Usage of `pack` for finding built `deptycheck` from tests, thus getting rid of ubiquitous `depends` dirs in `tests`\n- [ ] Moving small common definitions for testing to small libraries with local `pack.toml`s instead of ubiquitous symlinks to the common files","files":null},{"type":6,"timestamp":1676917095,"nonce":"93pYSyNZEkbQ4eQmxWJetKgiNEI=","metadata":{"github-id":"UCE_lAHOEt7lWM5RsD7kzj0drTQ"},"target":"0ccebfd8bafb4554626047696dc70b0d6ac189e05be66ca8eb3c42cde2ae3447","message":"[`pack`](https://github.com/stefan-hoeck/idris2-pack) is a modern, cool and convenient way to do what we were doing in an ad-hoc way\n\nMay contain as substeps:\n- [x] Usage of `pack` in CI for selection of particular Idris version instead of custom `.idris-version` file (#45)\n- [ ] Usage of `pack` for installing external libraries like `elab-util` and `summary-stat` in `Makefile`, thus removing top-level `depends` dir\n- [ ] Usage of smaller libraries like `if-implicit-unsolved` and `mtl-tupled-impls` with installation of them from `Makefile`\n- [ ] Usage of `pack` for building `deptycheck` itself\n- [ ] Usage of `pack` for finding built `deptycheck` from tests, thus getting rid of ubiquitous `depends` dirs in `tests`\n- [ ] Moving small common definitions for testing to small libraries with local `pack.toml`s instead of ubiquitous symlinks to the common files","files":null},{"type":6,"timestamp":1676974086,"nonce":"sUkZIaCIrEQlW/0yAXTUQ8NFVEU=","metadata":{"github-id":"UCE_lAHOEt7lWM5RsD7kzj0n3vs"},"target":"0ccebfd8bafb4554626047696dc70b0d6ac189e05be66ca8eb3c42cde2ae3447","message":"[`pack`](https://github.com/stefan-hoeck/idris2-pack) is a modern, cool and convenient way to do what we were doing in an ad-hoc way\n\nMay contain as substeps:\n- [x] Usage of `pack` in CI for selection of particular Idris version instead of custom `.idris-version` file (#45)\n- [ ] Usage of `pack` for installing external libraries like `elab-util` and `summary-stat` in `Makefile`, thus removing top-level `depends` dir\n- [ ] Usage of `pack` for building `deptycheck` itself\n- [ ] Usage of smaller libraries like `if-implicit-unsolved` and `mtl-tupled-impls` with installation of them from `Makefile`\n- [ ] Usage of `pack` for finding built `deptycheck` from tests, thus getting rid of ubiquitous `depends` dirs in `tests`\n- [ ] Moving small common definitions for testing to small libraries with local `pack.toml`s instead of ubiquitous symlinks to the common files\n- [ ] Make use of `golden-runner-helper` to run tests with `pack test ...`","files":null},{"type":6,"timestamp":1676974124,"nonce":"2jPttoMy5OoaSlmeERzIwUp5nG4=","metadata":{"github-id":"UCE_lAHOEt7lWM5RsD7kzj0n4bA"},"target":"0ccebfd8bafb4554626047696dc70b0d6ac189e05be66ca8eb3c42cde2ae3447","message":"[`pack`](https://github.com/stefan-hoeck/idris2-pack) is a modern, cool and convenient way to do what we were doing in an ad-hoc way\n\nMay contain as substeps:\n- [x] Usage of `pack` in CI for selection of particular Idris version instead of custom `.idris-version` file (#45)\n- [ ] Usage of `pack` for installing external libraries like `elab-util` and `summary-stat` in `Makefile`, thus removing top-level `depends` dir\n- [ ] Usage of `pack` for building `deptycheck` itself\n- [ ] Usage of `pack` for finding built `deptycheck` from tests, thus getting rid of ubiquitous `depends` dirs in `tests`\n- [ ] Usage of smaller libraries like `if-implicit-unsolved` and `mtl-tupled-impls` with installation of them from `Makefile`\n- [ ] Moving small common definitions for testing to small libraries with local `pack.toml`s instead of ubiquitous symlinks to the common files\n- [ ] Make use of `golden-runner-helper` to run tests with `pack test ...`","files":null},{"type":6,"timestamp":1677003150,"nonce":"EhaJUE7reHwoA14iIW18nXYBLAg=","metadata":{"github-id":"UCE_lAHOEt7lWM5RsD7kzj0wjU0"},"target":"0ccebfd8bafb4554626047696dc70b0d6ac189e05be66ca8eb3c42cde2ae3447","message":"[`pack`](https://github.com/stefan-hoeck/idris2-pack) is a modern, cool and convenient way to do what we were doing in an ad-hoc way\n\nMay contain as substeps:\n- [x] Usage of `pack` in CI for selection of particular Idris version instead of custom `.idris-version` file (#45)\n- [ ] Usage of `pack` for installing external libraries like `elab-util` and `summary-stat` in `Makefile`, thus removing top-level `depends` dir\n- [ ] Usage of `pack` for building `deptycheck` itself\n- [ ] Usage of `pack` for finding built `deptycheck` from tests, thus getting rid of ubiquitous `depends` dirs in `tests`\n- [ ] Usage of smaller libraries like `if-implicit-unsolved` and `mtl-tupled-impls` with installation of them from `Makefile`\n- [ ] Moving small common definitions for testing to small libraries with local `pack.toml`s instead of ubiquitous symlinks to the common files\n- [ ] Make use of `golden-runner-helper` to run tests with `pack test ...`\n- [ ] Move all `installation` tests to other sections","files":null},{"type":6,"timestamp":1677003445,"nonce":"8QLzLlGvEb8lfyI/xo588T0cGeA=","metadata":{"github-id":"UCE_lAHOEt7lWM5RsD7kzj0wn5k"},"target":"0ccebfd8bafb4554626047696dc70b0d6ac189e05be66ca8eb3c42cde2ae3447","message":"[`pack`](https://github.com/stefan-hoeck/idris2-pack) is a modern, cool and convenient way to do what we were doing in an ad-hoc way\n\nMay contain as substeps:\n- [x] Usage of `pack` in CI for selection of particular Idris version instead of custom `.idris-version` file (#45)\n- [ ] Usage of `pack` for installing external libraries like `elab-util` and `summary-stat` in `Makefile`, thus removing top-level `depends` dir\n- [ ] Usage of `pack` for building `deptycheck` itself\n- [ ] Usage of `pack` for finding built `deptycheck` from tests, thus getting rid of ubiquitous `depends` dirs in `tests`\n- [ ] Usage of smaller libraries like `if-implicit-unsolved` and `mtl-tupled-impls` with installation of them from `Makefile`\n- [ ] Moving small common definitions for testing to small libraries with local `pack.toml`s instead of ubiquitous symlinks to the common files\n- [ ] Make use of `golden-runner-helper` to run tests with `pack test ...`\n- [ ] Move all `installation` tests to other sections\n- [ ] Remove makefiles","files":null},{"type":6,"timestamp":1677004197,"nonce":"le9RNhCEo14w4Ob0YWQqnin5VQo=","metadata":{"github-id":"UCE_lAHOEt7lWM5RsD7kzj0wzgE"},"target":"0ccebfd8bafb4554626047696dc70b0d6ac189e05be66ca8eb3c42cde2ae3447","message":"[`pack`](https://github.com/stefan-hoeck/idris2-pack) is a modern, cool and convenient way to do what we were doing in an ad-hoc way\n\nMay contain as substeps:\n- [x] Usage of `pack` in CI for selection of particular Idris version instead of custom `.idris-version` file (#45)\n- [ ] Usage of `pack` for installing external libraries like `elab-util` and `summary-stat` in `Makefile`, thus removing top-level `depends` dir (#48)\n- [ ] Usage of `pack` for building `deptycheck` itself (#48)\n- [ ] Usage of `pack` for finding built `deptycheck` from tests, thus getting rid of ubiquitous `depends` dirs in `tests` (#48)\n- [ ] Usage of smaller libraries like `if-implicit-unsolved` and `mtl-tupled-impls` with installation of them from `Makefile`\n- [ ] Moving small common definitions for testing to small libraries with local `pack.toml`s instead of ubiquitous symlinks to the common files\n- [ ] Make use of `golden-runner-helper` to run tests with `pack test ...`\n- [ ] Move all `installation` tests to other sections\n- [ ] Remove makefiles","files":null},{"type":6,"timestamp":1677055349,"nonce":"Yb2SZw+vm9jDO2mbFV3+aJQ8Ybk=","metadata":{"github-id":"UCE_lAHOEt7lWM5RsD7kzj06_h4"},"target":"0ccebfd8bafb4554626047696dc70b0d6ac189e05be66ca8eb3c42cde2ae3447","message":"[`pack`](https://github.com/stefan-hoeck/idris2-pack) is a modern, cool and convenient way to do what we were doing in an ad-hoc way\n\nMay contain as substeps:\n- [x] Usage of `pack` in CI for selection of particular Idris version instead of custom `.idris-version` file (#45)\n- [ ] Usage of `pack` for installing external libraries like `elab-util` and `summary-stat` in `Makefile`, thus removing top-level `depends` dir (#48)\n- [ ] Usage of `pack` for building `deptycheck` itself (#48)\n- [ ] Usage of `pack` for finding built `deptycheck` from tests, thus getting rid of ubiquitous `depends` dirs in `tests` (#48)\n- [ ] Move all `installation` tests to other sections (#48)\n- [ ] Usage of smaller libraries like `if-implicit-unsolved` and `mtl-tupled-impls` with installation of them from `Makefile`i\n- [ ] Moving small common definitions for testing to small libraries with local `pack.toml`s instead of ubiquitous symlinks to the common files\n- [ ] Make use of `golden-runner-helper` to run tests with `pack test ...`\n- [ ] Remove makefiles","files":null},{"type":6,"timestamp":1677061100,"nonce":"8OsEWiPgg31zC+orAiUG0Gje0s8=","metadata":{"github-id":"UCE_lAHOEt7lWM5RsD7kzj08sqQ"},"target":"0ccebfd8bafb4554626047696dc70b0d6ac189e05be66ca8eb3c42cde2ae3447","message":"[`pack`](https://github.com/stefan-hoeck/idris2-pack) is a modern, cool and convenient way to do what we were doing in an ad-hoc way\n\nMay contain as substeps:\n- [x] Usage of `pack` in CI for selection of particular Idris version instead of custom `.idris-version` file (#45)\n- [x] Usage of `pack` for installing external libraries like `elab-util` and `summary-stat` in `Makefile`, thus removing top-level `depends` dir (#48)\n- [ ] Usage of `pack` for building `deptycheck` itself (#48)\n- [ ] Usage of `pack` for finding built `deptycheck` from tests, thus getting rid of ubiquitous `depends` dirs in `tests` (#48)\n- [ ] Move all `installation` tests to other sections (#48)\n- [ ] Usage of smaller libraries like `if-implicit-unsolved` and `mtl-tupled-impls` with installation of them from `Makefile`i\n- [ ] Moving small common definitions for testing to small libraries with local `pack.toml`s instead of ubiquitous symlinks to the common files\n- [ ] Make use of `golden-runner-helper` to run tests with `pack test ...`\n- [ ] Remove makefiles","files":null},{"type":6,"timestamp":1677061102,"nonce":"/DOVRERZdD4R19kdSlR4yFsGkos=","metadata":{"github-id":"UCE_lAHOEt7lWM5RsD7kzj08stM"},"target":"0ccebfd8bafb4554626047696dc70b0d6ac189e05be66ca8eb3c42cde2ae3447","message":"[`pack`](https://github.com/stefan-hoeck/idris2-pack) is a modern, cool and convenient way to do what we were doing in an ad-hoc way\n\nMay contain as substeps:\n- [x] Usage of `pack` in CI for selection of particular Idris version instead of custom `.idris-version` file (#45)\n- [x] Usage of `pack` for installing external libraries like `elab-util` and `summary-stat` in `Makefile`, thus removing top-level `depends` dir (#48)\n- [x] Usage of `pack` for building `deptycheck` itself (#48)\n- [ ] Usage of `pack` for finding built `deptycheck` from tests, thus getting rid of ubiquitous `depends` dirs in `tests` (#48)\n- [ ] Move all `installation` tests to other sections (#48)\n- [ ] Usage of smaller libraries like `if-implicit-unsolved` and `mtl-tupled-impls` with installation of them from `Makefile`i\n- [ ] Moving small common definitions for testing to small libraries with local `pack.toml`s instead of ubiquitous symlinks to the common files\n- [ ] Make use of `golden-runner-helper` to run tests with `pack test ...`\n- [ ] Remove makefiles","files":null},{"type":6,"timestamp":1677061104,"nonce":"cVhD7+peCGWoRfRi6rCxSksQEmc=","metadata":{"github-id":"UCE_lAHOEt7lWM5RsD7kzj08svE"},"target":"0ccebfd8bafb4554626047696dc70b0d6ac189e05be66ca8eb3c42cde2ae3447","message":"[`pack`](https://github.com/stefan-hoeck/idris2-pack) is a modern, cool and convenient way to do what we were doing in an ad-hoc way\n\nMay contain as substeps:\n- [x] Usage of `pack` in CI for selection of particular Idris version instead of custom `.idris-version` file (#45)\n- [x] Usage of `pack` for installing external libraries like `elab-util` and `summary-stat` in `Makefile`, thus removing top-level `depends` dir (#48)\n- [x] Usage of `pack` for building `deptycheck` itself (#48)\n- [x] Usage of `pack` for finding built `deptycheck` from tests, thus getting rid of ubiquitous `depends` dirs in `tests` (#48)\n- [ ] Move all `installation` tests to other sections (#48)\n- [ ] Usage of smaller libraries like `if-implicit-unsolved` and `mtl-tupled-impls` with installation of them from `Makefile`i\n- [ ] Moving small common definitions for testing to small libraries with local `pack.toml`s instead of ubiquitous symlinks to the common files\n- [ ] Make use of `golden-runner-helper` to run tests with `pack test ...`\n- [ ] Remove makefiles","files":null},{"type":6,"timestamp":1677061106,"nonce":"Q9sHtCbkVXc81Qj0RjNIvhttcA4=","metadata":{"github-id":"UCE_lAHOEt7lWM5RsD7kzj08sxo"},"target":"0ccebfd8bafb4554626047696dc70b0d6ac189e05be66ca8eb3c42cde2ae3447","message":"[`pack`](https://github.com/stefan-hoeck/idris2-pack) is a modern, cool and convenient way to do what we were doing in an ad-hoc way\n\nMay contain as substeps:\n- [x] Usage of `pack` in CI for selection of particular Idris version instead of custom `.idris-version` file (#45)\n- [x] Usage of `pack` for installing external libraries like `elab-util` and `summary-stat` in `Makefile`, thus removing top-level `depends` dir (#48)\n- [x] Usage of `pack` for building `deptycheck` itself (#48)\n- [x] Usage of `pack` for finding built `deptycheck` from tests, thus getting rid of ubiquitous `depends` dirs in `tests` (#48)\n- [x] Move all `installation` tests to other sections (#48)\n- [ ] Usage of smaller libraries like `if-implicit-unsolved` and `mtl-tupled-impls` with installation of them from `Makefile`i\n- [ ] Moving small common definitions for testing to small libraries with local `pack.toml`s instead of ubiquitous symlinks to the common files\n- [ ] Make use of `golden-runner-helper` to run tests with `pack test ...`\n- [ ] Remove makefiles","files":null},{"type":6,"timestamp":1677081934,"nonce":"aR+QtpXrWfMB7eWAV4V/O0tkzMY=","metadata":{"github-id":"UCE_lAHOEt7lWM5RsD7kzj1CwRc"},"target":"0ccebfd8bafb4554626047696dc70b0d6ac189e05be66ca8eb3c42cde2ae3447","message":"[`pack`](https://github.com/stefan-hoeck/idris2-pack) is a modern, cool and convenient way to do what we were doing in an ad-hoc way\n\nMay contain as substeps:\n- [x] Usage of `pack` in CI for selection of particular Idris version instead of custom `.idris-version` file (#45)\n- [x] Usage of `pack` for installing external libraries like `elab-util` and `summary-stat` in `Makefile`, thus removing top-level `depends` dir (#48)\n- [x] Usage of `pack` for building `deptycheck` itself (#48)\n- [x] Usage of `pack` for finding built `deptycheck` from tests, thus getting rid of ubiquitous `depends` dirs in `tests` (#48)\n- [x] Move all `installation` tests to other sections (#48)\n- [ ] Make use of `golden-runner-helper` to run tests with `pack test ...` (#49)\n- [ ] Remove makefiles (#48, #49)\n- [ ] Usage of smaller libraries like `if-implicit-unsolved` and `mtl-tupled-impls` with installation of them from `Makefile`i\n- [ ] Moving small common definitions for testing to small libraries with local `pack.toml`s instead of ubiquitous symlinks to the common files","files":null},{"type":6,"timestamp":1677125700,"nonce":"jc2E+VTCG745Kvo0lFD1rhhmmRE=","metadata":{"github-id":"UCE_lAHOEt7lWM5RsD7kzj1LrT4"},"target":"0ccebfd8bafb4554626047696dc70b0d6ac189e05be66ca8eb3c42cde2ae3447","message":"[`pack`](https://github.com/stefan-hoeck/idris2-pack) is a modern, cool and convenient way to do what we were doing in an ad-hoc way\n\nMay contain as substeps:\n- [x] Usage of `pack` in CI for selection of particular Idris version instead of custom `.idris-version` file (#45)\n- [x] Usage of `pack` for installing external libraries like `elab-util` and `summary-stat` in `Makefile`, thus removing top-level `depends` dir (#48)\n- [x] Usage of `pack` for building `deptycheck` itself (#48)\n- [x] Usage of `pack` for finding built `deptycheck` from tests, thus getting rid of ubiquitous `depends` dirs in `tests` (#48)\n- [x] Move all `installation` tests to other sections (#48)\n- [ ] Make use of `golden-runner-helper` to run tests with `pack test ...` (#49)\n- [ ] Remove makefiles (#48, #49)\n- [ ] Usage of smaller libraries like `if-implicit-unsolved` and `mtl-tupled-impls` instead of actually having their modules here\n- [ ] Moving small common definitions for testing to small libraries with local `pack.toml`s instead of ubiquitous symlinks to the common files","files":null},{"type":6,"timestamp":1677149009,"nonce":"8BZpKYmRk+KGuYIsD1rvIT/fqI8=","metadata":{"github-id":"UCE_lAHOEt7lWM5RsD7kzj1P0eU"},"target":"0ccebfd8bafb4554626047696dc70b0d6ac189e05be66ca8eb3c42cde2ae3447","message":"[`pack`](https://github.com/stefan-hoeck/idris2-pack) is a modern, cool and convenient way to do what we were doing in an ad-hoc way\n\nMay contain as substeps:\n- [x] Usage of `pack` in CI for selection of particular Idris version instead of custom `.idris-version` file (#45)\n- [x] Usage of `pack` for installing external libraries like `elab-util` and `summary-stat` in `Makefile`, thus removing top-level `depends` dir (#48)\n- [x] Usage of `pack` for building `deptycheck` itself (#48)\n- [x] Usage of `pack` for finding built `deptycheck` from tests, thus getting rid of ubiquitous `depends` dirs in `tests` (#48)\n- [x] Move all `installation` tests to other sections (#48)\n- [x] Make use of `golden-runner-helper` to run tests with `pack test ...` (#49)\n- [ ] Remove makefiles (#48, #49)\n- [ ] Usage of smaller libraries like `if-implicit-unsolved` and `mtl-tupled-impls` instead of actually having their modules here\n- [ ] Moving small common definitions for testing to small libraries with local `pack.toml`s instead of ubiquitous symlinks to the common files","files":null},{"type":6,"timestamp":1677149011,"nonce":"gr34SqoiFGNDjucO6pSBeAi1EIQ=","metadata":{"github-id":"UCE_lAHOEt7lWM5RsD7kzj1P0gE"},"target":"0ccebfd8bafb4554626047696dc70b0d6ac189e05be66ca8eb3c42cde2ae3447","message":"[`pack`](https://github.com/stefan-hoeck/idris2-pack) is a modern, cool and convenient way to do what we were doing in an ad-hoc way\n\nMay contain as substeps:\n- [x] Usage of `pack` in CI for selection of particular Idris version instead of custom `.idris-version` file (#45)\n- [x] Usage of `pack` for installing external libraries like `elab-util` and `summary-stat` in `Makefile`, thus removing top-level `depends` dir (#48)\n- [x] Usage of `pack` for building `deptycheck` itself (#48)\n- [x] Usage of `pack` for finding built `deptycheck` from tests, thus getting rid of ubiquitous `depends` dirs in `tests` (#48)\n- [x] Move all `installation` tests to other sections (#48)\n- [x] Make use of `golden-runner-helper` to run tests with `pack test ...` (#49)\n- [x] Remove makefiles (#48, #49)\n- [ ] Usage of smaller libraries like `if-implicit-unsolved` and `mtl-tupled-impls` instead of actually having their modules here\n- [ ] Moving small common definitions for testing to small libraries with local `pack.toml`s instead of ubiquitous symlinks to the common files","files":null},{"type":6,"timestamp":1677149086,"nonce":"EujKv4Q9SYhXN8ohvSRFm9IHwKo=","metadata":{"github-id":"UCE_lAHOEt7lWM5RsD7kzj1P1rI"},"target":"0ccebfd8bafb4554626047696dc70b0d6ac189e05be66ca8eb3c42cde2ae3447","message":"[`pack`](https://github.com/stefan-hoeck/idris2-pack) is a modern, cool and convenient way to do what we were doing in an ad-hoc way\n\nMay contain as substeps:\n- [x] Usage of `pack` in CI for selection of particular Idris version instead of custom `.idris-version` file (#45)\n- [x] Usage of `pack` for installing external libraries like `elab-util` and `summary-stat` in `Makefile`, thus removing top-level `depends` dir (#48)\n- [x] Usage of `pack` for building `deptycheck` itself (#48)\n- [x] Usage of `pack` for finding built `deptycheck` from tests, thus getting rid of ubiquitous `depends` dirs in `tests` (#48)\n- [x] Move all `installation` tests to other sections (#48)\n- [x] Make use of `golden-runner-helper` to run tests with `pack test ...` (#49)\n- [x] Remove makefiles (#48, #49)\n- [ ] Usage of smaller libraries like `if-implicit-unsolved` and `mtl-tupled-impls` instead of actually having their modules here (#50)\n- [ ] Moving small common definitions for testing to small libraries with local `pack.toml`s instead of ubiquitous symlinks to the common files","files":null},{"type":6,"timestamp":1677152716,"nonce":"HYOr1RHH7lihzAEvOdQ8377YiPo=","metadata":{"github-id":"UCE_lAHOEt7lWM5RsD7kzj1Qs0A"},"target":"0ccebfd8bafb4554626047696dc70b0d6ac189e05be66ca8eb3c42cde2ae3447","message":"[`pack`](https://github.com/stefan-hoeck/idris2-pack) is a modern, cool and convenient way to do what we were doing in an ad-hoc way\n\nMay contain as substeps:\n- [x] Usage of `pack` in CI for selection of particular Idris version instead of custom `.idris-version` file (#45)\n- [x] Usage of `pack` for installing external libraries like `elab-util` and `summary-stat` in `Makefile`, thus removing top-level `depends` dir (#48)\n- [x] Usage of `pack` for building `deptycheck` itself (#48)\n- [x] Usage of `pack` for finding built `deptycheck` from tests, thus getting rid of ubiquitous `depends` dirs in `tests` (#48)\n- [x] Move all `installation` tests to other sections (#48)\n- [x] Make use of `golden-runner-helper` to run tests with `pack test ...` (#49)\n- [x] Remove makefiles (#48, #49)\n- [x] Usage of smaller libraries like `if-implicit-unsolved` and `mtl-tupled-impls` instead of actually having their modules here (#50)\n- [ ] Moving small common definitions for testing to small libraries with local `pack.toml`s instead of ubiquitous symlinks to the common files","files":null},{"type":5,"timestamp":1663015970,"nonce":"eU0T0tTI1PV8oKlQDWssLXUU4uo=","metadata":{"github-id":"LE_lADOEt7lWM5RsD7kzwAAAAG3WP5q"},"added":["part: ci"],"removed":[]},{"type":5,"timestamp":1663015970,"nonce":"4/OZFy4j+r1QrQ283uGnN+GneWM=","metadata":{"github-id":"LE_lADOEt7lWM5RsD7kzwAAAAG3WP5s"},"added":["status: feature request"],"removed":[]},{"type":5,"timestamp":1663015970,"nonce":"QnCFGB4B59YoBqVrQmx+XNyoGGw=","metadata":{"github-id":"LE_lADOEt7lWM5RsD7kzwAAAAG3WP5t"},"added":["part: build"],"removed":[]}]}