{"author":{"id":"f5c1510d307fd5139d976a4ab7917d589450d36a7f1eb353252247c6b767a6b3"},"ops":[{"type":1,"timestamp":1747055990,"nonce":"gpI/G8DMiA01Hc/0hUv1CpUY8pU=","metadata":{"github-id":"I_kwDOEt7lWM62NXb5","github-url":"https://github.com/buzden/deptycheck/issues/267","origin":"github"},"title":"Check name visibility before attempting derivation","message":"Consider the following module:\n\n```idirs2\ndata A = MkA\n\npublic export\ndata B = MkB A\n```\n\nSuppose we want to derive a generator for the type `B`. It's common to place `deriveGen` in a separate module. Unfortunately, this isn't possible in the example above because `A` is private. However, deptycheck does not correctly verify whether the name is available in the current context, so it proceeds to derive the generator anyway. After the (potentially lengthy) derivation, the elaborator fails with an error like: `Name BlahBlahBlah.A is private`.\n\nIn such cases, it's likely the programmer simply forgot to add `public export` to the definition of `A`. I suggest adding a proper check for name visibility before running the derivation. This would help catch such errors earlier and save a significant amount of time.","files":null}]}