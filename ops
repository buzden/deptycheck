{"author":{"id":"f060d788db93a52de5e49e365585f035128a178bee993b524a8cbca3c1303fe5"},"ops":[{"type":3,"timestamp":1728032039,"nonce":"B/vL9DMV0lHor4Prvd1Mx8+I1cg=","metadata":{"github-id":"IC_kwDOEt7lWM6OpSGK","github-url":"https://github.com/buzden/deptycheck/issues/74#issuecomment-2393186698"},"message":"Another option is to use something similar to what @buzden described in _Honest way_, but with a special predictable `MonadRandom` monad. There's no need to build an inverse function for it because it doesn't involve actual randomness. Instead, it will act as a model that, depending on the seed, can generate any sequence of choices, like an ideal random generator. The seed can be based on or represented by a `GenPath`.\n```idris\n0 Complete : Gen a -\u003e Type\nComplete g = (x : a) -\u003e (seed ** runGen g seed predictableRandom = x)\n```","files":null},{"type":6,"timestamp":1728032155,"nonce":"MM11F1zh4QZtj5zwH7jkMHIQ64U=","metadata":{"github-id":"UCE_lALOEt7lWM6OpSGKzlF3ALQ"},"target":"b0dda06566686fd2ab9e4d10d996f58c0291b208d50f7a4bb25b09af1cff85a5","message":"Another option is to use something similar to what @buzden described in _Honest way_, but with a special predictable `MonadRandom`. There's no need to build an inverse function for it because it doesn't involve actual randomness. Instead, it will act as a model that, depending on the seed, can generate any sequence of choices, like an ideal random generator. The seed can be based on or represented by a `GenPath`.\n```idris\n0 Complete : Gen a -\u003e Type\nComplete g = (x : a) -\u003e (seed ** runGen g seed predictableRandom = x)\n```","files":null}]}