-------------------


@main
def tvlt(): Unit = {
  if (5.+(0)) < (2.+(2)) then {
    var lybokfpr = (4.+(5)).+(4.+(5))
    lybokfpr = lybokfpr
    lybokfpr = 4.+(lybokfpr + 1)
    lybokfpr = lybokfpr
    var uo: Boolean = (lybokfpr + lybokfpr).==(3 + 0)
    
  } else {
    val qemiujv = (jjh: Int, gxdtmng: Int, zdkvk: Int, n: Int, zadrbgu: Boolean) => {
      if (jjh + n) == zdkvk then
        extension (cuohsl: Int)
          def zmuqm(lnevjvz: Boolean, ssl: Int, ltiv: Int): Int = {
            if (true.&&(true)).||(zadrbgu) then
              if lnevjvz.&&(false && (!(zadrbgu))) then
                {}
              
            else
              if (ltiv.==(zdkvk)) || (ssl.<(4)) then
                {}
              else
                {}
              
            (ssl.+(5)) + (n.+(6))
          } : Int
        
      else
        extension (r: Int)
          def mrew(nbasrya: Int, jqaak: Boolean, jpinulqg: Boolean, kazmm: Boolean) =
            {} 
        def qsokaogqmr() = {  } 
        
      val mbn = jjh.+(1)
      val ltpicdael: Int = 6
      var woyvgazf: Int = (4 + 0).+(6 + n)
      
    } : Unit
    if (3 == 1) && (0.==(4)) then
      if (2 + 1).==(1 + 2) then
        extension (r: Int) def naqxvjgxmb() = { 4 <= (r + 1) } 
        qemiujv(1, 6, 5.+(4), 4.+(0), (1.naqxvjgxmb()).||(false.||(true)))
        
      else
        if false then
          {}
        else
          if true.||(false && false) then {
            
          }
          
        var wf: Boolean = (2.+(2)).<(2 + 2)
        
      extension (xmfo: Boolean)
        def qnog(jg: Boolean, tzmk: Int, ogkzgnyugn: Int, bzyegcnug: Int) = {
          qemiujv(3, 0, 0, tzmk.+(6), 5 < (tzmk + 6))
          
        } 
      
    else
      var yqavod = false && true
      qemiujv(6, 0, 0.+(4), 4.+(1), yqavod || (yqavod && yqavod))
      val sxfdzhrrh = (zbdd: Boolean, acoykh: Boolean, cbde: Boolean, dngc: Boolean, bqf: Boolean, drzqpmieuq: Boolean) =>
        {} 
      
    if false || (2 <= 4) then
      val obaztbbz: Boolean = (1.+(2)).==(2 + 6)
      
    else
      val ji: Boolean = (2 + 4).==(0.+(1))
      val xsjzzhjk = (rbjd: Boolean, msoanazo: Int, dbbygddcsy: Boolean, j: Int, ots: Boolean, axwjjdtw: Boolean) => {  } 
      
    
  }
  val jrqa: Boolean = !(false)
  extension (yannoshffy: Int)
    def kwc(qnbouij: Int, mtsapbnquq: Int): Unit =
      var k: Boolean = true
      k = !(!(!(jrqa)))
       
  val llqkzrga = (deszncso: Boolean, dtwbodm: Boolean, wvqqvju: Boolean) => {
    var x = (wvqqvju.&&(true)).||(4 == 5)
    x = true
    (6.+(3)).+(0.+(1))
  } 
  
}
-------------------

val kwyflaeizb = (0.+(5)).+(3.+(5))
val wfjunn = kwyflaeizb.+(kwyflaeizb + kwyflaeizb)
var lisrdrrgc: Int = 4.+(1)
val bh = (agieo: Boolean, qazggfrct: Int) =>
  if (0.<=(3)) && (!(false)) then {
    var fwiklya = lisrdrrgc
    
  } else {
    extension (psmyvssee: Int) def kmcysd(mc: Boolean, m: Int, kpwfobj: Int, g: Boolean, sk: Boolean) = {  } 
    
  }
  lisrdrrgc = (kwyflaeizb + qazggfrct).+(kwyflaeizb.+(5))
  6 
val qrnqnfy = (yovn: Boolean, t: Boolean) => {
  if (true.||(yovn)) || yovn then {
    
  }
  yovn
} 

@main
def chojxe(): Unit = {
  if 1 < (kwyflaeizb.+(5)) then
    {}
  else
    {}
  
}
-------------------

extension (xirzqm: Boolean)
  def efqu(): Unit =
    val tmxsbu = (5 == 6) && (!(false))
    var xnzeyxyo: Boolean = 4 == (3 + 4)
    extension (kg: Boolean)
      def doxdnly() = {
        if (1.+(5)).<=(5 + 4) then {
          xnzeyxyo = true
          
        }
        if true then
          {}
        else
          {}
        
      } 
    var drjp: Boolean = (0 == 0).||(xirzqm && false)
    if tmxsbu && (tmxsbu && false) then {
      
    }
     
var cstczqacp = (0 + 3) == (5 + 5)

@main
def japky(): Unit = {
  if cstczqacp then {
    (4 < (0.+(1))).efqu()
    extension (faco: Boolean)
      def f(vunluob: Int, xgriaerel: Boolean, rhn: Boolean, ffmlvduuc: Boolean, l: Boolean): Unit = {
        (5.==(vunluob)).efqu()
        
      } : Unit
    val tkhyrdnc = () => { (0.+(0)).==(3) } : Boolean
    
  } else {
    var gfknyi: Int = (1.+(3)) + (5.+(6))
    var quusqeb = (4 + 4) + (gfknyi.+(2))
    cstczqacp.efqu()
    
  }
  var cyopq: Int = (0 + 2) + (3 + 2)
  cstczqacp = cstczqacp && (true.&&(cstczqacp))
  val ycchap: Boolean = false
  
}
