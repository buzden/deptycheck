-------------------


@main
def mnsa(): Unit = {
  if true.||(false.||(false)) then {
    var fdzhrrhm: Boolean = true
    val adzbd = (nrhvs: Int, xrjrwx: Boolean) => {
      var juaggj: Boolean = false
      var f = (nrhvs.*(nrhvs)).+(3.*(0))
      fdzhrrhm = 4.<(f.*(0))
      
    } : Unit
    extension (mngs: Int)
      def c(dkvkpmkzgs: Boolean, i: Boolean, bjihb: Boolean) = {
        fdzhrrhm = 2.<=(mngs.*(-(mngs)))
        extension (qs: Boolean)
          def ye(yz: Boolean, wuxaq: Int, en: Boolean, f: Boolean): Boolean =
            wuxaq <= wuxaq 
        
      } 
    val e = (h: Int, rjmijkncbq: Boolean, ojdrz: Int, jfhtsyzw: Int) =>
      (0 * 5) * (4.*(1)) 
    
  } else {
    val hqwnmbq: Int = (-(0)) * (5.+(2))
    def hdoup(a: Boolean, ccciiux: Int, rgaqgckocj: Boolean, xrcubtog: Int, esgwvqqvj: Boolean, x: Int) =
      val pmdvj = (ws: Int, m: Int) => {
        if ccciiux.<=(3 * ccciiux) then {
          extension (qprxvr: Int) def z(ey: Boolean) = { 3 } 
          
        } else {
          val jhthzccdm = (4.==(4)) || rgaqgckocj
          
        }
        val rwbc: Int = (x.*(2)) * m
        
      } : Unit
      val utlg = (p: Int) => {
        pmdvj(ccciiux, 0.*(ccciiux * 0))
        
      } : Unit
      hqwnmbq * (x.*(-(hqwnmbq))) 
    if 5 <= (4.*(-(hqwnmbq))) then {
      
    } else {
      
    }
    if (-(2)) <= (4 * hqwnmbq) then
      {}
    extension (u: Int) def qlxoze(mreec: Boolean, mmjsrcpeqw: Boolean): Unit = { {} } : Unit
    
  }
  if 0 == (4.*(-(5))) then
    extension (mozthbn: Int)
      def uebcvuox(xmd: Boolean, gsilgnw: Int, ecv: Int) =
        if xmd || (mozthbn == (-(5))) then
          if true || (2.<(2)) then
            val fkmcysdfrd = xmd.||(ecv.<(-(mozthbn)))
            
          else
            def gia() =
              {} 
            
          
        else
          val jx = 0 * (6 + mozthbn)
          
        def mhqody(crdri: Int): Unit =
          extension (wh: Boolean) def cocwhnb(azlde: Int, lbda: Boolean, e: Boolean, jqcyn: Int): Int = { -(crdri) } : Int
           
        val ieosux = () =>
          ecv 
         
    (-(4)).uebcvuox(3 == 0, 5 * (-(4)), -(1 * 6))
    if (1 * 0) <= (-(0)) then
      if false then {
        
      }
      
    else
      (-(5)).uebcvuox(2 < 1, 5 * 6, (-(5)) * 5)
      
    val jeiqv: Int = 6
    
  else
    var xofqxp: Boolean = (true.||(true)) || (false.||(false))
    extension (fneq: Int)
      def fgcyhaxpe(o: Boolean): Int = {
        val ch = (sojkbqw: Int, mdefqu: Boolean, a: Int, xemxfjaoz: Int) =>
          var h = sojkbqw.*(5 * (-(a)))
          6 
        val zxsuzivv: Int = fneq
        ch(fneq, true, -(1), 3)
      } : Int
    extension (ahahw: Int)
      def p(tdqtckpnsx: Int, xw: Int, fwmpzhvupi: Boolean, o: Boolean, p: Boolean) = {
        extension (rrrmmcqlp: Boolean)
          def plqagg(et: Int, mpdscof: Boolean, kgtopycdns: Boolean): Unit =
            {} 
        xw fgcyhaxpe (ahahw.<=(-(ahahw)))
      } 
    xofqxp = 5 <= 0
    
  val n = () => {
    if (true.||(true)) || (0 == (-(5))) then {
      extension (jho: Int) def fwi(juwqgswj: Boolean, nshxpnn: Int): Unit = {  } : Unit
      val rdszhhqhhf = (fobjrlxn: Int, ereaqyqmh: Boolean, uhobkwqyx: Boolean, s: Int, poszubn: Boolean, xejgssqh: Int) =>
        ((2 * 6) * (6 * (-(5)))) : Int
      
    } else {
      
    }
    if (6 * 1).==(0.*(1)) then {
      
    } else {
      if false.||(false.||(true)) then
        {}
      else
        {}
      
    }
    extension (x: Boolean) def vnd() = { (2 * 1) * (0.*(-(5))) } 
    
  } : Unit
  var h = (0.*(0)).<=(0)
  def digtlljisa(yog: Int, lylptqjv: Boolean, rdjrbt: Boolean, shn: Boolean, yflaeizbbc: Int): Unit = {
    n()
    
  } 
  n()
  
}
-------------------

val mfusqmki: Int = (0 * 4).*(0.*(3))
var gfknyi = true || (true.||(false))

@main
def u(): Unit = {
  
}
-------------------

val qdwuca: Int = (6.*(0)).*(0 * 5)
def nzq(gptfihqq: Int, yzhcxeauia: Int, stlw: Boolean): Unit = {
  val cpkbfkcuo = 0
  
} 
var smzjwfuprm = 5.<(6)

@main
def ptziubj(): Unit = {
  if qdwuca == (qdwuca.*(3)) then
    val afqw = (qdwuca + qdwuca).*(qdwuca * (-(qdwuca)))
    smzjwfuprm = qdwuca.<=(0)
    
  else
    val fmdn = qdwuca * qdwuca
    def zilrhuky(ovmiu: Boolean, jtdachxqn: Boolean, hsw: Int, czjsfl: Int): Boolean = { false } 
    
  nzq(4 * qdwuca, 3, smzjwfuprm)
  if (qdwuca.*(qdwuca)) <= (qdwuca.*(-(3))) then {
    
  } else {
    
  }
  
}
