1/3: Building AlternativeCore (AlternativeCore.idr)
2/3: Building PrintDerivation (PrintDerivation.idr)
3/3: Building DerivedGen (DerivedGen.idr)
LOG gen.auto.derive.infra:0: type: (arg : Fuel) -> Gen Y
LOG gen.auto.derive.infra:0: 
ILam.  (MW ExplicitArg ^outmost-fuel^ : IVar Data.Fuel.Fuel)
    => ILocal (IApp. IVar <DerivedGen.Y>[] $ IVar ^outmost-fuel^)
         IClaim MW
                Export
                []
                (MkTy <Prelude.Types.Nat>[]
                      (IPi.  (MW ExplicitArg : IVar Data.Fuel.Fuel)
                          -> (IApp. IVar Test.DepTyCheck.Gen.Gen
                                  $ IVar Prelude.Types.Nat)))
         IClaim MW
                Export
                []
                (MkTy <DerivedGen.X_GADT>[]
                      (IPi.  (MW ExplicitArg : IVar Data.Fuel.Fuel)
                          -> (IApp. IVar Test.DepTyCheck.Gen.Gen
                                  $ (IApp. IVar Builtin.DPair.DPair
                                         $ IVar Prelude.Types.Nat
                                         $ (ILam.  (MW ExplicitArg {arg:3630} : IVar Prelude.Types.Nat)
                                                => (IApp. IVar Builtin.DPair.DPair
                                                        $ IVar Prelude.Types.Nat
                                                        $ (ILam.  (MW ExplicitArg {arg:3633} : IVar Prelude.Types.Nat)
                                                               => (IApp. IVar DerivedGen.X_GADT
                                                                       $ IVar {arg:3630}
                                                                       $ IVar {arg:3633}))))))))
         IClaim MW
                Export
                []
                (MkTy <DerivedGen.X_GADT>[0]
                      (IPi.  (MW ExplicitArg : IVar Data.Fuel.Fuel)
                          -> (MW ExplicitArg {arg:3630} : IVar Prelude.Types.Nat)
                          -> (IApp. IVar Test.DepTyCheck.Gen.Gen
                                  $ (IApp. IVar Builtin.DPair.DPair
                                         $ IVar Prelude.Types.Nat
                                         $ (ILam.  (MW ExplicitArg {arg:3633} : IVar Prelude.Types.Nat)
                                                => (IApp. IVar DerivedGen.X_GADT
                                                        $ IVar {arg:3630}
                                                        $ IVar {arg:3633}))))))
         IClaim MW
                Export
                []
                (MkTy <DerivedGen.X_GADT>[1]
                      (IPi.  (MW ExplicitArg : IVar Data.Fuel.Fuel)
                          -> (MW ExplicitArg {arg:3633} : IVar Prelude.Types.Nat)
                          -> (IApp. IVar Test.DepTyCheck.Gen.Gen
                                  $ (IApp. IVar Builtin.DPair.DPair
                                         $ IVar Prelude.Types.Nat
                                         $ (ILam.  (MW ExplicitArg {arg:3630} : IVar Prelude.Types.Nat)
                                                => (IApp. IVar DerivedGen.X_GADT
                                                        $ IVar {arg:3630}
                                                        $ IVar {arg:3633}))))))
         IClaim MW
                Export
                []
                (MkTy <DerivedGen.Y>[]
                      (IPi.  (MW ExplicitArg : IVar Data.Fuel.Fuel)
                          -> (IApp. IVar Test.DepTyCheck.Gen.Gen
                                  $ IVar DerivedGen.Y)))
         IDef <Prelude.Types.Nat>[]
              [ PatClause (IApp. IVar <Prelude.Types.Nat>[]
                               $ IBindVar ^fuel_arg^)
                          (ILocal (ICase (IVar ^fuel_arg^)
                                         (IVar Data.Fuel.Fuel)
                                         [ PatClause (IVar Data.Fuel.Dry)
                                                     (IApp. IVar <<Prelude.Types.Z>>
                                                          $ IVar Data.Fuel.Dry)
                                         , PatClause (IApp. IVar Data.Fuel.More
                                                          $ IBindVar ^sub^fuel_arg^)
                                                     (IApp. INamedApp (IVar Test.DepTyCheck.Gen.frequency)
                                                                      description
                                                                      (IApp. IVar Just
                                                                           $ IPrimVal Prelude.Types.Nat[] (spend fuel))
                                                          $ (IApp. IVar ::
                                                                 $ (IApp. IVar Builtin.MkPair
                                                                        $ (IApp. IVar Prelude.integerToNat
                                                                               $ IPrimVal 1)
                                                                        $ (IApp. IVar <<Prelude.Types.Z>>
                                                                               $ IVar ^fuel_arg^))
                                                                 $ (IApp. IVar ::
                                                                        $ (IApp. IVar Builtin.MkPair
                                                                               $ (IApp. IVar Deriving.DepTyCheck.Util.Reflection.leftDepth
                                                                                      $ IVar ^sub^fuel_arg^)
                                                                               $ (IApp. IVar <<Prelude.Types.S>>
                                                                                      $ IVar ^sub^fuel_arg^))
                                                                        $ IVar Nil))) ]))
                            IClaim MW
                                   Export
                                   []
                                   (MkTy <<Prelude.Types.Z>>
                                         (IPi.  (MW ExplicitArg : IVar Data.Fuel.Fuel)
                                             -> (IApp. IVar Test.DepTyCheck.Gen.Gen
                                                     $ IVar Prelude.Types.Nat)))
                            IClaim MW
                                   Export
                                   []
                                   (MkTy <<Prelude.Types.S>>
                                         (IPi.  (MW ExplicitArg : IVar Data.Fuel.Fuel)
                                             -> (IApp. IVar Test.DepTyCheck.Gen.Gen
                                                     $ IVar Prelude.Types.Nat)))
                            IDef <<Prelude.Types.Z>>
                                 [ PatClause (IApp. IVar <<Prelude.Types.Z>>
                                                  $ IBindVar ^cons_fuel^)
                                             (IApp. INamedApp (IVar Prelude.pure)
                                                              f
                                                              (IVar Test.DepTyCheck.Gen.Gen)
                                                  $ IVar Prelude.Types.Z) ]
                            IDef <<Prelude.Types.S>>
                                 [ PatClause (IApp. IVar <<Prelude.Types.S>>
                                                  $ IBindVar ^cons_fuel^)
                                             (IApp. IVar >>=
                                                  $ (IApp. IVar <Prelude.Types.Nat>[]
                                                         $ IVar ^cons_fuel^)
                                                  $ (ILam.  (MW ExplicitArg ^bnd^{arg:647} : Implicit False)
                                                         => (IApp. INamedApp (IVar Prelude.pure)
                                                                             f
                                                                             (IVar Test.DepTyCheck.Gen.Gen)
                                                                 $ (IApp. IVar Prelude.Types.S
                                                                        $ IVar ^bnd^{arg:647})))) ] ]
         IDef <DerivedGen.X_GADT>[]
              [ PatClause (IApp. IVar <DerivedGen.X_GADT>[]
                               $ IBindVar ^fuel_arg^)
                          (ILocal (IApp. INamedApp (IVar Test.DepTyCheck.Gen.oneOf)
                                                   description
                                                   (IApp. IVar Just
                                                        $ IPrimVal DerivedGen.X_GADT[] (non-recursive))
                                       $ (IApp. IVar ::
                                              $ (IApp. IVar <<DerivedGen.MkXG_4>>
                                                     $ IVar ^fuel_arg^)
                                              $ (IApp. IVar ::
                                                     $ (IApp. IVar <<DerivedGen.MkXG_5>>
                                                            $ IVar ^fuel_arg^)
                                                     $ IVar Nil))))
                            IClaim MW
                                   Export
                                   []
                                   (MkTy <<DerivedGen.MkXG_4>>
                                         (IPi.  (MW ExplicitArg : IVar Data.Fuel.Fuel)
                                             -> (IApp. IVar Test.DepTyCheck.Gen.Gen
                                                     $ (IApp. IVar Builtin.DPair.DPair
                                                            $ IVar Prelude.Types.Nat
                                                            $ (ILam.  (MW ExplicitArg {arg:3630} : IVar Prelude.Types.Nat)
                                                                   => (IApp. IVar Builtin.DPair.DPair
                                                                           $ IVar Prelude.Types.Nat
                                                                           $ (ILam.  (MW ExplicitArg {arg:3633} : IVar Prelude.Types.Nat)
                                                                                  => (IApp. IVar DerivedGen.X_GADT
                                                                                          $ IVar {arg:3630}
                                                                                          $ IVar {arg:3633}))))))))
                            IClaim MW
                                   Export
                                   []
                                   (MkTy <<DerivedGen.MkXG_5>>
                                         (IPi.  (MW ExplicitArg : IVar Data.Fuel.Fuel)
                                             -> (IApp. IVar Test.DepTyCheck.Gen.Gen
                                                     $ (IApp. IVar Builtin.DPair.DPair
                                                            $ IVar Prelude.Types.Nat
                                                            $ (ILam.  (MW ExplicitArg {arg:3630} : IVar Prelude.Types.Nat)
                                                                   => (IApp. IVar Builtin.DPair.DPair
                                                                           $ IVar Prelude.Types.Nat
                                                                           $ (ILam.  (MW ExplicitArg {arg:3633} : IVar Prelude.Types.Nat)
                                                                                  => (IApp. IVar DerivedGen.X_GADT
                                                                                          $ IVar {arg:3630}
                                                                                          $ IVar {arg:3633}))))))))
                            IDef <<DerivedGen.MkXG_4>>
                                 [ PatClause (IApp. IVar <<DerivedGen.MkXG_4>>
                                                  $ IBindVar ^cons_fuel^)
                                             (IApp. INamedApp (IVar Prelude.pure)
                                                              f
                                                              (IVar Test.DepTyCheck.Gen.Gen)
                                                  $ (IApp. IVar Builtin.DPair.MkDPair
                                                         $ Implicit True
                                                         $ (IApp. IVar Builtin.DPair.MkDPair
                                                                $ Implicit True
                                                                $ IVar DerivedGen.MkXG_4))) ]
                            IDef <<DerivedGen.MkXG_5>>
                                 [ PatClause (IApp. IVar <<DerivedGen.MkXG_5>>
                                                  $ IBindVar ^cons_fuel^)
                                             (IApp. IVar >>=
                                                  $ (IApp. IVar <Prelude.Types.Nat>[]
                                                         $ IVar ^outmost-fuel^)
                                                  $ (ILam.  (MW ExplicitArg m : Implicit False)
                                                         => (IApp. INamedApp (IVar Prelude.pure)
                                                                             f
                                                                             (IVar Test.DepTyCheck.Gen.Gen)
                                                                 $ (IApp. IVar Builtin.DPair.MkDPair
                                                                        $ Implicit True
                                                                        $ (IApp. IVar Builtin.DPair.MkDPair
                                                                               $ Implicit True
                                                                               $ INamedApp (IVar DerivedGen.MkXG_5)
                                                                                           m
                                                                                           (IVar m)))))) ] ]
         IDef <DerivedGen.X_GADT>[0]
              [ PatClause (IApp. IVar <DerivedGen.X_GADT>[0]
                               $ IBindVar ^fuel_arg^
                               $ IBindVar inter^<{arg:3630}>)
                          (ILocal (IApp. INamedApp (IVar Test.DepTyCheck.Gen.oneOf)
                                                   description
                                                   (IApp. IVar Just
                                                        $ IPrimVal DerivedGen.X_GADT[0] (non-recursive))
                                       $ (IApp. IVar ::
                                              $ (IApp. IVar <<DerivedGen.MkXG_4>>
                                                     $ IVar ^fuel_arg^
                                                     $ IVar inter^<{arg:3630}>)
                                              $ (IApp. IVar ::
                                                     $ (IApp. IVar <<DerivedGen.MkXG_5>>
                                                            $ IVar ^fuel_arg^
                                                            $ IVar inter^<{arg:3630}>)
                                                     $ IVar Nil))))
                            IClaim MW
                                   Export
                                   []
                                   (MkTy <<DerivedGen.MkXG_4>>
                                         (IPi.  (MW ExplicitArg : IVar Data.Fuel.Fuel)
                                             -> (MW ExplicitArg {arg:3630} : IVar Prelude.Types.Nat)
                                             -> (IApp. IVar Test.DepTyCheck.Gen.Gen
                                                     $ (IApp. IVar Builtin.DPair.DPair
                                                            $ IVar Prelude.Types.Nat
                                                            $ (ILam.  (MW ExplicitArg {arg:3633} : IVar Prelude.Types.Nat)
                                                                   => (IApp. IVar DerivedGen.X_GADT
                                                                           $ IVar {arg:3630}
                                                                           $ IVar {arg:3633}))))))
                            IClaim MW
                                   Export
                                   []
                                   (MkTy <<DerivedGen.MkXG_5>>
                                         (IPi.  (MW ExplicitArg : IVar Data.Fuel.Fuel)
                                             -> (MW ExplicitArg {arg:3630} : IVar Prelude.Types.Nat)
                                             -> (IApp. IVar Test.DepTyCheck.Gen.Gen
                                                     $ (IApp. IVar Builtin.DPair.DPair
                                                            $ IVar Prelude.Types.Nat
                                                            $ (ILam.  (MW ExplicitArg {arg:3633} : IVar Prelude.Types.Nat)
                                                                   => (IApp. IVar DerivedGen.X_GADT
                                                                           $ IVar {arg:3630}
                                                                           $ IVar {arg:3633}))))))
                            IDef <<DerivedGen.MkXG_4>>
                                 [ PatClause (IApp. IVar <<DerivedGen.MkXG_4>>
                                                  $ IBindVar ^cons_fuel^
                                                  $ (IApp. IVar Prelude.Types.S
                                                         $ (IApp. IVar Prelude.Types.S
                                                                $ (IApp. IVar Prelude.Types.S
                                                                       $ (IApp. IVar Prelude.Types.S
                                                                              $ IVar Prelude.Types.Z)))))
                                             (IApp. INamedApp (IVar Prelude.pure)
                                                              f
                                                              (IVar Test.DepTyCheck.Gen.Gen)
                                                  $ (IApp. IVar Builtin.DPair.MkDPair
                                                         $ Implicit True
                                                         $ IVar DerivedGen.MkXG_4))
                                 , PatClause (IApp. IVar <<DerivedGen.MkXG_4>>
                                                  $ Implicit True
                                                  $ Implicit True)
                                             (IVar empty) ]
                            IDef <<DerivedGen.MkXG_5>>
                                 [ PatClause (IApp. IVar <<DerivedGen.MkXG_5>>
                                                  $ IBindVar ^cons_fuel^
                                                  $ (IApp. IVar Prelude.Types.S
                                                         $ (IApp. IVar Prelude.Types.S
                                                                $ (IApp. IVar Prelude.Types.S
                                                                       $ (IApp. IVar Prelude.Types.S
                                                                              $ (IApp. IVar Prelude.Types.S
                                                                                     $ IVar Prelude.Types.Z))))))
                                             (IApp. IVar >>=
                                                  $ (IApp. IVar <Prelude.Types.Nat>[]
                                                         $ IVar ^outmost-fuel^)
                                                  $ (ILam.  (MW ExplicitArg m : Implicit False)
                                                         => (IApp. INamedApp (IVar Prelude.pure)
                                                                             f
                                                                             (IVar Test.DepTyCheck.Gen.Gen)
                                                                 $ (IApp. IVar Builtin.DPair.MkDPair
                                                                        $ Implicit True
                                                                        $ INamedApp (IVar DerivedGen.MkXG_5)
                                                                                    m
                                                                                    (IVar m)))))
                                 , PatClause (IApp. IVar <<DerivedGen.MkXG_5>>
                                                  $ Implicit True
                                                  $ Implicit True)
                                             (IVar empty) ] ]
         IDef <DerivedGen.X_GADT>[1]
              [ PatClause (IApp. IVar <DerivedGen.X_GADT>[1]
                               $ IBindVar ^fuel_arg^
                               $ IBindVar inter^<{arg:3633}>)
                          (ILocal (IApp. INamedApp (IVar Test.DepTyCheck.Gen.oneOf)
                                                   description
                                                   (IApp. IVar Just
                                                        $ IPrimVal DerivedGen.X_GADT[1] (non-recursive))
                                       $ (IApp. IVar ::
                                              $ (IApp. IVar <<DerivedGen.MkXG_4>>
                                                     $ IVar ^fuel_arg^
                                                     $ IVar inter^<{arg:3633}>)
                                              $ (IApp. IVar ::
                                                     $ (IApp. IVar <<DerivedGen.MkXG_5>>
                                                            $ IVar ^fuel_arg^
                                                            $ IVar inter^<{arg:3633}>)
                                                     $ IVar Nil))))
                            IClaim MW
                                   Export
                                   []
                                   (MkTy <<DerivedGen.MkXG_4>>
                                         (IPi.  (MW ExplicitArg : IVar Data.Fuel.Fuel)
                                             -> (MW ExplicitArg {arg:3633} : IVar Prelude.Types.Nat)
                                             -> (IApp. IVar Test.DepTyCheck.Gen.Gen
                                                     $ (IApp. IVar Builtin.DPair.DPair
                                                            $ IVar Prelude.Types.Nat
                                                            $ (ILam.  (MW ExplicitArg {arg:3630} : IVar Prelude.Types.Nat)
                                                                   => (IApp. IVar DerivedGen.X_GADT
                                                                           $ IVar {arg:3630}
                                                                           $ IVar {arg:3633}))))))
                            IClaim MW
                                   Export
                                   []
                                   (MkTy <<DerivedGen.MkXG_5>>
                                         (IPi.  (MW ExplicitArg : IVar Data.Fuel.Fuel)
                                             -> (MW ExplicitArg {arg:3633} : IVar Prelude.Types.Nat)
                                             -> (IApp. IVar Test.DepTyCheck.Gen.Gen
                                                     $ (IApp. IVar Builtin.DPair.DPair
                                                            $ IVar Prelude.Types.Nat
                                                            $ (ILam.  (MW ExplicitArg {arg:3630} : IVar Prelude.Types.Nat)
                                                                   => (IApp. IVar DerivedGen.X_GADT
                                                                           $ IVar {arg:3630}
                                                                           $ IVar {arg:3633}))))))
                            IDef <<DerivedGen.MkXG_4>>
                                 [ PatClause (IApp. IVar <<DerivedGen.MkXG_4>>
                                                  $ IBindVar ^cons_fuel^
                                                  $ (IApp. IVar Prelude.Types.S
                                                         $ (IApp. IVar Prelude.Types.S
                                                                $ (IApp. IVar Prelude.Types.S
                                                                       $ (IApp. IVar Prelude.Types.S
                                                                              $ (IApp. IVar Prelude.Types.S
                                                                                     $ IVar Prelude.Types.Z))))))
                                             (IApp. INamedApp (IVar Prelude.pure)
                                                              f
                                                              (IVar Test.DepTyCheck.Gen.Gen)
                                                  $ (IApp. IVar Builtin.DPair.MkDPair
                                                         $ Implicit True
                                                         $ IVar DerivedGen.MkXG_4))
                                 , PatClause (IApp. IVar <<DerivedGen.MkXG_4>>
                                                  $ Implicit True
                                                  $ Implicit True)
                                             (IVar empty) ]
                            IDef <<DerivedGen.MkXG_5>>
                                 [ PatClause (IApp. IVar <<DerivedGen.MkXG_5>>
                                                  $ IBindVar ^cons_fuel^
                                                  $ IBindVar m)
                                             (IApp. INamedApp (IVar Prelude.pure)
                                                              f
                                                              (IVar Test.DepTyCheck.Gen.Gen)
                                                  $ (IApp. IVar Builtin.DPair.MkDPair
                                                         $ Implicit True
                                                         $ INamedApp (IVar DerivedGen.MkXG_5)
                                                                     m
                                                                     (IVar m))) ] ]
         IDef <DerivedGen.Y>[]
              [ PatClause (IApp. IVar <DerivedGen.Y>[] $ IBindVar ^fuel_arg^)
                          (ILocal (IApp. INamedApp (IVar Test.DepTyCheck.Gen.oneOf)
                                                   description
                                                   (IApp. IVar Just
                                                        $ IPrimVal DerivedGen.Y[] (non-recursive))
                                       $ (IApp. IVar ::
                                              $ (IApp. IVar <<DerivedGen.MkY1>>
                                                     $ IVar ^fuel_arg^)
                                              $ (IApp. IVar ::
                                                     $ (IApp. IVar <<DerivedGen.MkY2>>
                                                            $ IVar ^fuel_arg^)
                                                     $ IVar Nil))))
                            IClaim MW
                                   Export
                                   []
                                   (MkTy <<DerivedGen.MkY1>>
                                         (IPi.  (MW ExplicitArg : IVar Data.Fuel.Fuel)
                                             -> (IApp. IVar Test.DepTyCheck.Gen.Gen
                                                     $ IVar DerivedGen.Y)))
                            IClaim MW
                                   Export
                                   []
                                   (MkTy <<DerivedGen.MkY2>>
                                         (IPi.  (MW ExplicitArg : IVar Data.Fuel.Fuel)
                                             -> (IApp. IVar Test.DepTyCheck.Gen.Gen
                                                     $ IVar DerivedGen.Y)))
                            IDef <<DerivedGen.MkY1>>
                                 [ PatClause (IApp. IVar <<DerivedGen.MkY1>>
                                                  $ IBindVar ^cons_fuel^)
                                             (IApp. IVar >>=
                                                  $ (IApp. IVar <DerivedGen.X_GADT>[]
                                                         $ IVar ^outmost-fuel^)
                                                  $ (ILam.  (MW ExplicitArg {lamc:0} : Implicit False)
                                                         => ICase (IVar {lamc:0})
                                                                  (Implicit False)
                                                                  [ PatClause (IApp. IVar Builtin.DPair.MkDPair
                                                                                   $ IBindVar n
                                                                                   $ (IApp. IVar Builtin.DPair.MkDPair
                                                                                          $ IBindVar k
                                                                                          $ IBindVar ^bnd^{arg:3660}))
                                                                              (IApp. IVar >>=
                                                                                   $ (IApp. IVar <DerivedGen.X_GADT>[0]
                                                                                          $ IVar ^outmost-fuel^
                                                                                          $ IVar n)
                                                                                   $ (ILam.  (MW ExplicitArg {lamc:0} : Implicit False)
                                                                                          => ICase (IVar {lamc:0})
                                                                                                   (Implicit False)
                                                                                                   [ PatClause (IApp. IVar Builtin.DPair.MkDPair
                                                                                                                    $ IBindVar m
                                                                                                                    $ IBindVar ^bnd^{arg:3657})
                                                                                                               (IApp. INamedApp (IVar Prelude.pure)
                                                                                                                                f
                                                                                                                                (IVar Test.DepTyCheck.Gen.Gen)
                                                                                                                    $ (IApp. INamedApp (INamedApp (INamedApp (IVar DerivedGen.MkY1)
                                                                                                                                                             k
                                                                                                                                                             (IVar k))
                                                                                                                                                  m
                                                                                                                                                  (IVar m))
                                                                                                                                       n
                                                                                                                                       (IVar n)
                                                                                                                           $ IVar ^bnd^{arg:3657}
                                                                                                                           $ IVar ^bnd^{arg:3660})) ])) ])) ]
                            IDef <<DerivedGen.MkY2>>
                                 [ PatClause (IApp. IVar <<DerivedGen.MkY2>>
                                                  $ IBindVar ^cons_fuel^)
                                             (IApp. IVar >>=
                                                  $ (IApp. IVar <DerivedGen.X_GADT>[]
                                                         $ IVar ^outmost-fuel^)
                                                  $ (ILam.  (MW ExplicitArg {lamc:0} : Implicit False)
                                                         => ICase (IVar {lamc:0})
                                                                  (Implicit False)
                                                                  [ PatClause (IApp. IVar Builtin.DPair.MkDPair
                                                                                   $ IBindVar k
                                                                                   $ (IApp. IVar Builtin.DPair.MkDPair
                                                                                          $ IBindVar m
                                                                                          $ IBindVar ^bnd^{arg:3669}))
                                                                              (IApp. IVar >>=
                                                                                   $ (IApp. IVar <DerivedGen.X_GADT>[1]
                                                                                          $ IVar ^outmost-fuel^
                                                                                          $ IVar m)
                                                                                   $ (ILam.  (MW ExplicitArg {lamc:0} : Implicit False)
                                                                                          => ICase (IVar {lamc:0})
                                                                                                   (Implicit False)
                                                                                                   [ PatClause (IApp. IVar Builtin.DPair.MkDPair
                                                                                                                    $ IBindVar n
                                                                                                                    $ IBindVar ^bnd^{arg:3666})
                                                                                                               (IApp. INamedApp (IVar Prelude.pure)
                                                                                                                                f
                                                                                                                                (IVar Test.DepTyCheck.Gen.Gen)
                                                                                                                    $ (IApp. INamedApp (INamedApp (INamedApp (IVar DerivedGen.MkY2)
                                                                                                                                                             k
                                                                                                                                                             (IVar k))
                                                                                                                                                  m
                                                                                                                                                  (IVar m))
                                                                                                                                       n
                                                                                                                                       (IVar n)
                                                                                                                           $ IVar ^bnd^{arg:3666}
                                                                                                                           $ IVar ^bnd^{arg:3669})) ])) ])) ] ]
