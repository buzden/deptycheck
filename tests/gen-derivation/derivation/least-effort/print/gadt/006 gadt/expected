1/3: Building AlternativeCore (AlternativeCore.idr)
2/3: Building PrintDerivation (PrintDerivation.idr)
3/3: Building DerivedGen (DerivedGen.idr)
LOG gen.auto.derive.infra:0: type: (arg : Fuel) -> {auto conArg : ((arg : Fuel) -> Gen Nat)} -> {auto conArg : ((arg : Fuel) -> Gen String)} -> (b : Bool) -> Gen (D b)
LOG gen.auto.derive.infra:0: 
ILam.  (MW ExplicitArg ^outmost-fuel^ : IVar Data.Fuel.Fuel)
    => (MW AutoImplicit external^<Prelude.Types.Nat>[] : IPi.  (MW ExplicitArg {arg:3672} : IVar Data.Fuel.Fuel)
                                                            -> (IApp. IVar Test.DepTyCheck.Gen.Gen
                                                                    $ IVar Prelude.Types.Nat))
    => (MW AutoImplicit external^<^prim^.String>[] : IPi.  (MW ExplicitArg {arg:3679} : IVar Data.Fuel.Fuel)
                                                        -> (IApp. IVar Test.DepTyCheck.Gen.Gen
                                                                $ IPrimVal String))
    => (MW ExplicitArg b : IVar Prelude.Basics.Bool)
    => ILocal (IApp. IVar <DerivedGen.D>[0] $ IVar ^outmost-fuel^ $ IVar b)
         IClaim MW
                Export
                []
                (MkTy <Prelude.Basics.Bool>[]
                      (IPi.  (MW ExplicitArg : IVar Data.Fuel.Fuel)
                          -> (IApp. IVar Test.DepTyCheck.Gen.Gen
                                  $ IVar Prelude.Basics.Bool)))
         IClaim MW
                Export
                []
                (MkTy <DerivedGen.D>[]
                      (IPi.  (MW ExplicitArg : IVar Data.Fuel.Fuel)
                          -> (IApp. IVar Test.DepTyCheck.Gen.Gen
                                  $ (IApp. IVar Builtin.DPair.DPair
                                         $ IVar Prelude.Basics.Bool
                                         $ (ILam.  (MW ExplicitArg {arg:3630} : IVar Prelude.Basics.Bool)
                                                => (IApp. IVar DerivedGen.D
                                                        $ IVar {arg:3630}))))))
         IClaim MW
                Export
                []
                (MkTy <DerivedGen.D>[0]
                      (IPi.  (MW ExplicitArg : IVar Data.Fuel.Fuel)
                          -> (MW ExplicitArg {arg:3630} : IVar Prelude.Basics.Bool)
                          -> (IApp. IVar Test.DepTyCheck.Gen.Gen
                                  $ (IApp. IVar DerivedGen.D
                                         $ IVar {arg:3630}))))
         IDef <Prelude.Basics.Bool>[]
              [ PatClause (IApp. IVar <Prelude.Basics.Bool>[]
                               $ IBindVar ^fuel_arg^)
                          (ILocal (IApp. INamedApp (IVar Test.DepTyCheck.Gen.oneOf)
                                                   description
                                                   (IApp. IVar Just
                                                        $ IPrimVal Prelude.Basics.Bool[] (non-recursive))
                                       $ (IApp. IVar ::
                                              $ (IApp. IVar <<Prelude.Basics.False>>
                                                     $ IVar ^fuel_arg^)
                                              $ (IApp. IVar ::
                                                     $ (IApp. IVar <<Prelude.Basics.True>>
                                                            $ IVar ^fuel_arg^)
                                                     $ IVar Nil))))
                            IClaim MW
                                   Export
                                   []
                                   (MkTy <<Prelude.Basics.False>>
                                         (IPi.  (MW ExplicitArg : IVar Data.Fuel.Fuel)
                                             -> (IApp. IVar Test.DepTyCheck.Gen.Gen
                                                     $ IVar Prelude.Basics.Bool)))
                            IClaim MW
                                   Export
                                   []
                                   (MkTy <<Prelude.Basics.True>>
                                         (IPi.  (MW ExplicitArg : IVar Data.Fuel.Fuel)
                                             -> (IApp. IVar Test.DepTyCheck.Gen.Gen
                                                     $ IVar Prelude.Basics.Bool)))
                            IDef <<Prelude.Basics.False>>
                                 [ PatClause (IApp. IVar <<Prelude.Basics.False>>
                                                  $ IBindVar ^cons_fuel^)
                                             (IApp. INamedApp (IVar Prelude.pure)
                                                              f
                                                              (IVar Test.DepTyCheck.Gen.Gen)
                                                  $ IVar Prelude.Basics.False) ]
                            IDef <<Prelude.Basics.True>>
                                 [ PatClause (IApp. IVar <<Prelude.Basics.True>>
                                                  $ IBindVar ^cons_fuel^)
                                             (IApp. INamedApp (IVar Prelude.pure)
                                                              f
                                                              (IVar Test.DepTyCheck.Gen.Gen)
                                                  $ IVar Prelude.Basics.True) ] ]
         IDef <DerivedGen.D>[]
              [ PatClause (IApp. IVar <DerivedGen.D>[] $ IBindVar ^fuel_arg^)
                          (ILocal (ICase (IVar ^fuel_arg^)
                                         (IVar Data.Fuel.Fuel)
                                         [ PatClause (IVar Data.Fuel.Dry)
                                                     (IApp. INamedApp (IVar Test.DepTyCheck.Gen.oneOf)
                                                                      description
                                                                      (IApp. IVar Just
                                                                           $ IPrimVal DerivedGen.D[] (dry fuel))
                                                          $ (IApp. IVar ::
                                                                 $ (IApp. IVar <<DerivedGen.JJ>>
                                                                        $ IVar Data.Fuel.Dry)
                                                                 $ (IApp. IVar ::
                                                                        $ (IApp. IVar <<DerivedGen.TL>>
                                                                               $ IVar Data.Fuel.Dry)
                                                                        $ IVar Nil)))
                                         , PatClause (IApp. IVar Data.Fuel.More
                                                          $ IBindVar ^sub^fuel_arg^)
                                                     (IApp. INamedApp (IVar Test.DepTyCheck.Gen.frequency)
                                                                      description
                                                                      (IApp. IVar Just
                                                                           $ IPrimVal DerivedGen.D[] (spend fuel))
                                                          $ (IApp. IVar ::
                                                                 $ (IApp. IVar Builtin.MkPair
                                                                        $ (IApp. IVar Prelude.integerToNat
                                                                               $ IPrimVal 1)
                                                                        $ (IApp. IVar <<DerivedGen.JJ>>
                                                                               $ IVar ^fuel_arg^))
                                                                 $ (IApp. IVar ::
                                                                        $ (IApp. IVar Builtin.MkPair
                                                                               $ (IApp. IVar Deriving.DepTyCheck.Util.Reflection.leftDepth
                                                                                      $ IVar ^sub^fuel_arg^)
                                                                               $ (IApp. IVar <<DerivedGen.FN>>
                                                                                      $ IVar ^sub^fuel_arg^))
                                                                        $ (IApp. IVar ::
                                                                               $ (IApp. IVar Builtin.MkPair
                                                                                      $ (IApp. IVar Prelude.integerToNat
                                                                                             $ IPrimVal 1)
                                                                                      $ (IApp. IVar <<DerivedGen.TL>>
                                                                                             $ IVar ^fuel_arg^))
                                                                               $ (IApp. IVar ::
                                                                                      $ (IApp. IVar Builtin.MkPair
                                                                                             $ (IApp. IVar Deriving.DepTyCheck.Util.Reflection.leftDepth
                                                                                                    $ IVar ^sub^fuel_arg^)
                                                                                             $ (IApp. IVar <<DerivedGen.TR>>
                                                                                                    $ IVar ^sub^fuel_arg^))
                                                                                      $ IVar Nil))))) ]))
                            IClaim MW
                                   Export
                                   []
                                   (MkTy <<DerivedGen.JJ>>
                                         (IPi.  (MW ExplicitArg : IVar Data.Fuel.Fuel)
                                             -> (IApp. IVar Test.DepTyCheck.Gen.Gen
                                                     $ (IApp. IVar Builtin.DPair.DPair
                                                            $ IVar Prelude.Basics.Bool
                                                            $ (ILam.  (MW ExplicitArg {arg:3630} : IVar Prelude.Basics.Bool)
                                                                   => (IApp. IVar DerivedGen.D
                                                                           $ IVar {arg:3630}))))))
                            IClaim MW
                                   Export
                                   []
                                   (MkTy <<DerivedGen.FN>>
                                         (IPi.  (MW ExplicitArg : IVar Data.Fuel.Fuel)
                                             -> (IApp. IVar Test.DepTyCheck.Gen.Gen
                                                     $ (IApp. IVar Builtin.DPair.DPair
                                                            $ IVar Prelude.Basics.Bool
                                                            $ (ILam.  (MW ExplicitArg {arg:3630} : IVar Prelude.Basics.Bool)
                                                                   => (IApp. IVar DerivedGen.D
                                                                           $ IVar {arg:3630}))))))
                            IClaim MW
                                   Export
                                   []
                                   (MkTy <<DerivedGen.TL>>
                                         (IPi.  (MW ExplicitArg : IVar Data.Fuel.Fuel)
                                             -> (IApp. IVar Test.DepTyCheck.Gen.Gen
                                                     $ (IApp. IVar Builtin.DPair.DPair
                                                            $ IVar Prelude.Basics.Bool
                                                            $ (ILam.  (MW ExplicitArg {arg:3630} : IVar Prelude.Basics.Bool)
                                                                   => (IApp. IVar DerivedGen.D
                                                                           $ IVar {arg:3630}))))))
                            IClaim MW
                                   Export
                                   []
                                   (MkTy <<DerivedGen.TR>>
                                         (IPi.  (MW ExplicitArg : IVar Data.Fuel.Fuel)
                                             -> (IApp. IVar Test.DepTyCheck.Gen.Gen
                                                     $ (IApp. IVar Builtin.DPair.DPair
                                                            $ IVar Prelude.Basics.Bool
                                                            $ (ILam.  (MW ExplicitArg {arg:3630} : IVar Prelude.Basics.Bool)
                                                                   => (IApp. IVar DerivedGen.D
                                                                           $ IVar {arg:3630}))))))
                            IDef <<DerivedGen.JJ>>
                                 [ PatClause (IApp. IVar <<DerivedGen.JJ>>
                                                  $ IBindVar ^cons_fuel^)
                                             (IApp. IVar >>=
                                                  $ (IApp. IVar <Prelude.Basics.Bool>[]
                                                         $ IVar ^cons_fuel^)
                                                  $ (ILam.  (MW ExplicitArg b : Implicit False)
                                                         => (IApp. IVar >>=
                                                                 $ (IApp. IVar external^<Prelude.Types.Nat>[]
                                                                        $ IVar ^cons_fuel^)
                                                                 $ (ILam.  (MW ExplicitArg ^bnd^{arg:3636} : Implicit False)
                                                                        => (IApp. IVar >>=
                                                                                $ (IApp. IVar external^<Prelude.Types.Nat>[]
                                                                                       $ IVar ^cons_fuel^)
                                                                                $ (ILam.  (MW ExplicitArg ^bnd^{arg:3639} : Implicit False)
                                                                                       => (IApp. INamedApp (IVar Prelude.pure)
                                                                                                           f
                                                                                                           (IVar Test.DepTyCheck.Gen.Gen)
                                                                                               $ (IApp. IVar Builtin.DPair.MkDPair
                                                                                                      $ Implicit True
                                                                                                      $ (IApp. INamedApp (IVar DerivedGen.JJ)
                                                                                                                         b
                                                                                                                         (IVar b)
                                                                                                             $ IVar ^bnd^{arg:3636}
                                                                                                             $ IVar ^bnd^{arg:3639}))))))))) ]
                            IDef <<DerivedGen.FN>>
                                 [ PatClause (IApp. IVar <<DerivedGen.FN>>
                                                  $ IBindVar ^cons_fuel^)
                                             (IApp. IVar >>=
                                                  $ (IApp. IVar <DerivedGen.D>[]
                                                         $ IVar ^cons_fuel^)
                                                  $ (ILam.  (MW ExplicitArg {lamc:0} : Implicit False)
                                                         => ICase (IVar {lamc:0})
                                                                  (Implicit False)
                                                                  [ PatClause (IApp. IVar Builtin.DPair.MkDPair
                                                                                   $ IBindVar b
                                                                                   $ IBindVar ^bnd^{arg:3648})
                                                                              (IApp. IVar >>=
                                                                                   $ (IApp. IVar external^<Prelude.Types.Nat>[]
                                                                                          $ IVar ^cons_fuel^)
                                                                                   $ (ILam.  (MW ExplicitArg ^bnd^{arg:3645} : Implicit False)
                                                                                          => (IApp. INamedApp (IVar Prelude.pure)
                                                                                                              f
                                                                                                              (IVar Test.DepTyCheck.Gen.Gen)
                                                                                                  $ (IApp. IVar Builtin.DPair.MkDPair
                                                                                                         $ Implicit True
                                                                                                         $ (IApp. INamedApp (IVar DerivedGen.FN)
                                                                                                                            b
                                                                                                                            (IVar b)
                                                                                                                $ IVar ^bnd^{arg:3645}
                                                                                                                $ IVar ^bnd^{arg:3648}))))) ])) ]
                            IDef <<DerivedGen.TL>>
                                 [ PatClause (IApp. IVar <<DerivedGen.TL>>
                                                  $ IBindVar ^cons_fuel^)
                                             (IApp. IVar >>=
                                                  $ (IApp. IVar external^<^prim^.String>[]
                                                         $ IVar ^cons_fuel^)
                                                  $ (ILam.  (MW ExplicitArg ^bnd^{arg:3654} : Implicit False)
                                                         => (IApp. INamedApp (IVar Prelude.pure)
                                                                             f
                                                                             (IVar Test.DepTyCheck.Gen.Gen)
                                                                 $ (IApp. IVar Builtin.DPair.MkDPair
                                                                        $ Implicit True
                                                                        $ (IApp. IVar DerivedGen.TL
                                                                               $ IVar ^bnd^{arg:3654}))))) ]
                            IDef <<DerivedGen.TR>>
                                 [ PatClause (IApp. IVar <<DerivedGen.TR>>
                                                  $ IBindVar ^cons_fuel^)
                                             (IApp. IVar >>=
                                                  $ (IApp. IVar <DerivedGen.D>[]
                                                         $ IVar ^cons_fuel^)
                                                  $ (ILam.  (MW ExplicitArg {lamc:0} : Implicit False)
                                                         => ICase (IVar {lamc:0})
                                                                  (Implicit False)
                                                                  [ PatClause (IApp. IVar Builtin.DPair.MkDPair
                                                                                   $ IBindVar b
                                                                                   $ IBindVar ^bnd^{arg:3662})
                                                                              (IApp. IVar >>=
                                                                                   $ (IApp. IVar external^<^prim^.String>[]
                                                                                          $ IVar ^cons_fuel^)
                                                                                   $ (ILam.  (MW ExplicitArg ^bnd^{arg:3659} : Implicit False)
                                                                                          => (IApp. INamedApp (IVar Prelude.pure)
                                                                                                              f
                                                                                                              (IVar Test.DepTyCheck.Gen.Gen)
                                                                                                  $ (IApp. IVar Builtin.DPair.MkDPair
                                                                                                         $ Implicit True
                                                                                                         $ (IApp. INamedApp (IVar DerivedGen.TR)
                                                                                                                            b
                                                                                                                            (IVar b)
                                                                                                                $ IVar ^bnd^{arg:3659}
                                                                                                                $ IVar ^bnd^{arg:3662}))))) ])) ] ]
         IDef <DerivedGen.D>[0]
              [ PatClause (IApp. IVar <DerivedGen.D>[0]
                               $ IBindVar ^fuel_arg^
                               $ IBindVar {arg:3630})
                          (ILocal (ICase (IVar ^fuel_arg^)
                                         (IVar Data.Fuel.Fuel)
                                         [ PatClause (IVar Data.Fuel.Dry)
                                                     (IApp. INamedApp (IVar Test.DepTyCheck.Gen.oneOf)
                                                                      description
                                                                      (IApp. IVar Just
                                                                           $ IPrimVal DerivedGen.D[0] (dry fuel))
                                                          $ (IApp. IVar ::
                                                                 $ (IApp. IVar <<DerivedGen.JJ>>
                                                                        $ IVar Data.Fuel.Dry
                                                                        $ IVar {arg:3630})
                                                                 $ (IApp. IVar ::
                                                                        $ (IApp. IVar <<DerivedGen.TL>>
                                                                               $ IVar Data.Fuel.Dry
                                                                               $ IVar {arg:3630})
                                                                        $ IVar Nil)))
                                         , PatClause (IApp. IVar Data.Fuel.More
                                                          $ IBindVar ^sub^fuel_arg^)
                                                     (IApp. INamedApp (IVar Test.DepTyCheck.Gen.frequency)
                                                                      description
                                                                      (IApp. IVar Just
                                                                           $ IPrimVal DerivedGen.D[0] (spend fuel))
                                                          $ (IApp. IVar ::
                                                                 $ (IApp. IVar Builtin.MkPair
                                                                        $ (IApp. IVar Prelude.integerToNat
                                                                               $ IPrimVal 1)
                                                                        $ (IApp. IVar <<DerivedGen.JJ>>
                                                                               $ IVar ^fuel_arg^
                                                                               $ IVar {arg:3630}))
                                                                 $ (IApp. IVar ::
                                                                        $ (IApp. IVar Builtin.MkPair
                                                                               $ (IApp. IVar Deriving.DepTyCheck.Util.Reflection.leftDepth
                                                                                      $ IVar ^sub^fuel_arg^)
                                                                               $ (IApp. IVar <<DerivedGen.FN>>
                                                                                      $ IVar ^sub^fuel_arg^
                                                                                      $ IVar {arg:3630}))
                                                                        $ (IApp. IVar ::
                                                                               $ (IApp. IVar Builtin.MkPair
                                                                                      $ (IApp. IVar Prelude.integerToNat
                                                                                             $ IPrimVal 1)
                                                                                      $ (IApp. IVar <<DerivedGen.TL>>
                                                                                             $ IVar ^fuel_arg^
                                                                                             $ IVar {arg:3630}))
                                                                               $ (IApp. IVar ::
                                                                                      $ (IApp. IVar Builtin.MkPair
                                                                                             $ (IApp. IVar Deriving.DepTyCheck.Util.Reflection.leftDepth
                                                                                                    $ IVar ^sub^fuel_arg^)
                                                                                             $ (IApp. IVar <<DerivedGen.TR>>
                                                                                                    $ IVar ^sub^fuel_arg^
                                                                                                    $ IVar {arg:3630}))
                                                                                      $ IVar Nil))))) ]))
                            IClaim MW
                                   Export
                                   []
                                   (MkTy <<DerivedGen.JJ>>
                                         (IPi.  (MW ExplicitArg : IVar Data.Fuel.Fuel)
                                             -> (MW ExplicitArg {arg:3630} : IVar Prelude.Basics.Bool)
                                             -> (IApp. IVar Test.DepTyCheck.Gen.Gen
                                                     $ (IApp. IVar DerivedGen.D
                                                            $ IVar {arg:3630}))))
                            IClaim MW
                                   Export
                                   []
                                   (MkTy <<DerivedGen.FN>>
                                         (IPi.  (MW ExplicitArg : IVar Data.Fuel.Fuel)
                                             -> (MW ExplicitArg {arg:3630} : IVar Prelude.Basics.Bool)
                                             -> (IApp. IVar Test.DepTyCheck.Gen.Gen
                                                     $ (IApp. IVar DerivedGen.D
                                                            $ IVar {arg:3630}))))
                            IClaim MW
                                   Export
                                   []
                                   (MkTy <<DerivedGen.TL>>
                                         (IPi.  (MW ExplicitArg : IVar Data.Fuel.Fuel)
                                             -> (MW ExplicitArg {arg:3630} : IVar Prelude.Basics.Bool)
                                             -> (IApp. IVar Test.DepTyCheck.Gen.Gen
                                                     $ (IApp. IVar DerivedGen.D
                                                            $ IVar {arg:3630}))))
                            IClaim MW
                                   Export
                                   []
                                   (MkTy <<DerivedGen.TR>>
                                         (IPi.  (MW ExplicitArg : IVar Data.Fuel.Fuel)
                                             -> (MW ExplicitArg {arg:3630} : IVar Prelude.Basics.Bool)
                                             -> (IApp. IVar Test.DepTyCheck.Gen.Gen
                                                     $ (IApp. IVar DerivedGen.D
                                                            $ IVar {arg:3630}))))
                            IDef <<DerivedGen.JJ>>
                                 [ PatClause (IApp. IVar <<DerivedGen.JJ>>
                                                  $ IBindVar ^cons_fuel^
                                                  $ IBindVar b)
                                             (IApp. IVar >>=
                                                  $ (IApp. IVar external^<Prelude.Types.Nat>[]
                                                         $ IVar ^cons_fuel^)
                                                  $ (ILam.  (MW ExplicitArg ^bnd^{arg:3636} : Implicit False)
                                                         => (IApp. IVar >>=
                                                                 $ (IApp. IVar external^<Prelude.Types.Nat>[]
                                                                        $ IVar ^cons_fuel^)
                                                                 $ (ILam.  (MW ExplicitArg ^bnd^{arg:3639} : Implicit False)
                                                                        => (IApp. INamedApp (IVar Prelude.pure)
                                                                                            f
                                                                                            (IVar Test.DepTyCheck.Gen.Gen)
                                                                                $ (IApp. INamedApp (IVar DerivedGen.JJ)
                                                                                                   b
                                                                                                   (IVar b)
                                                                                       $ IVar ^bnd^{arg:3636}
                                                                                       $ IVar ^bnd^{arg:3639})))))) ]
                            IDef <<DerivedGen.FN>>
                                 [ PatClause (IApp. IVar <<DerivedGen.FN>>
                                                  $ IBindVar ^cons_fuel^
                                                  $ IVar Prelude.Basics.False)
                                             (IApp. IVar >>=
                                                  $ (IApp. IVar <DerivedGen.D>[]
                                                         $ IVar ^cons_fuel^)
                                                  $ (ILam.  (MW ExplicitArg {lamc:0} : Implicit False)
                                                         => ICase (IVar {lamc:0})
                                                                  (Implicit False)
                                                                  [ PatClause (IApp. IVar Builtin.DPair.MkDPair
                                                                                   $ IBindVar b
                                                                                   $ IBindVar ^bnd^{arg:3648})
                                                                              (IApp. IVar >>=
                                                                                   $ (IApp. IVar external^<Prelude.Types.Nat>[]
                                                                                          $ IVar ^cons_fuel^)
                                                                                   $ (ILam.  (MW ExplicitArg ^bnd^{arg:3645} : Implicit False)
                                                                                          => (IApp. INamedApp (IVar Prelude.pure)
                                                                                                              f
                                                                                                              (IVar Test.DepTyCheck.Gen.Gen)
                                                                                                  $ (IApp. INamedApp (IVar DerivedGen.FN)
                                                                                                                     b
                                                                                                                     (IVar b)
                                                                                                         $ IVar ^bnd^{arg:3645}
                                                                                                         $ IVar ^bnd^{arg:3648})))) ]))
                                 , PatClause (IApp. IVar <<DerivedGen.FN>>
                                                  $ Implicit True
                                                  $ Implicit True)
                                             (IVar empty) ]
                            IDef <<DerivedGen.TL>>
                                 [ PatClause (IApp. IVar <<DerivedGen.TL>>
                                                  $ IBindVar ^cons_fuel^
                                                  $ IVar Prelude.Basics.True)
                                             (IApp. IVar >>=
                                                  $ (IApp. IVar external^<^prim^.String>[]
                                                         $ IVar ^cons_fuel^)
                                                  $ (ILam.  (MW ExplicitArg ^bnd^{arg:3654} : Implicit False)
                                                         => (IApp. INamedApp (IVar Prelude.pure)
                                                                             f
                                                                             (IVar Test.DepTyCheck.Gen.Gen)
                                                                 $ (IApp. IVar DerivedGen.TL
                                                                        $ IVar ^bnd^{arg:3654}))))
                                 , PatClause (IApp. IVar <<DerivedGen.TL>>
                                                  $ Implicit True
                                                  $ Implicit True)
                                             (IVar empty) ]
                            IDef <<DerivedGen.TR>>
                                 [ PatClause (IApp. IVar <<DerivedGen.TR>>
                                                  $ IBindVar ^cons_fuel^
                                                  $ IVar Prelude.Basics.True)
                                             (IApp. IVar >>=
                                                  $ (IApp. IVar <DerivedGen.D>[]
                                                         $ IVar ^cons_fuel^)
                                                  $ (ILam.  (MW ExplicitArg {lamc:0} : Implicit False)
                                                         => ICase (IVar {lamc:0})
                                                                  (Implicit False)
                                                                  [ PatClause (IApp. IVar Builtin.DPair.MkDPair
                                                                                   $ IBindVar b
                                                                                   $ IBindVar ^bnd^{arg:3662})
                                                                              (IApp. IVar >>=
                                                                                   $ (IApp. IVar external^<^prim^.String>[]
                                                                                          $ IVar ^cons_fuel^)
                                                                                   $ (ILam.  (MW ExplicitArg ^bnd^{arg:3659} : Implicit False)
                                                                                          => (IApp. INamedApp (IVar Prelude.pure)
                                                                                                              f
                                                                                                              (IVar Test.DepTyCheck.Gen.Gen)
                                                                                                  $ (IApp. INamedApp (IVar DerivedGen.TR)
                                                                                                                     b
                                                                                                                     (IVar b)
                                                                                                         $ IVar ^bnd^{arg:3659}
                                                                                                         $ IVar ^bnd^{arg:3662})))) ]))
                                 , PatClause (IApp. IVar <<DerivedGen.TR>>
                                                  $ Implicit True
                                                  $ Implicit True)
                                             (IVar empty) ] ]
