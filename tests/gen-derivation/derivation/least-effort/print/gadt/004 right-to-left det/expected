1/3: Building AlternativeCore (AlternativeCore.idr)
2/3: Building PrintDerivation (PrintDerivation.idr)
3/3: Building DerivedGen (DerivedGen.idr)
LOG gen.auto.derive.infra:0: type: (arg : Fuel) -> Gen Y
LOG gen.auto.derive.infra:0: 
ILam.  (MW ExplicitArg ^outmost-fuel^ : IVar Data.Fuel.Fuel)
    => ILocal (IApp. IVar <DerivedGen.Y>[] $ IVar ^outmost-fuel^)
         IClaim MW
                Export
                []
                (MkTy <Prelude.Types.Nat>[]
                      (IPi.  (MW ExplicitArg : IVar Data.Fuel.Fuel)
                          -> (IApp. IVar Test.DepTyCheck.Gen.Gen
                                  $ IVar Prelude.Types.Nat)))
         IClaim MW
                Export
                []
                (MkTy <DerivedGen.X_ADT>[]
                      (IPi.  (MW ExplicitArg : IVar Data.Fuel.Fuel)
                          -> (IApp. IVar Test.DepTyCheck.Gen.Gen
                                  $ (IApp. IVar Builtin.DPair.DPair
                                         $ IVar Prelude.Types.Nat
                                         $ (ILam.  (MW ExplicitArg {arg:851} : IVar Prelude.Types.Nat)
                                                => (IApp. IVar Builtin.DPair.DPair
                                                        $ IVar Prelude.Types.Nat
                                                        $ (ILam.  (MW ExplicitArg {arg:854} : IVar Prelude.Types.Nat)
                                                               => (IApp. IVar DerivedGen.X_ADT
                                                                       $ IVar {arg:851}
                                                                       $ IVar {arg:854}))))))))
         IClaim MW
                Export
                []
                (MkTy <DerivedGen.X_GADT>[0]
                      (IPi.  (MW ExplicitArg : IVar Data.Fuel.Fuel)
                          -> (MW ExplicitArg {arg:830} : IVar Prelude.Types.Nat)
                          -> (IApp. IVar Test.DepTyCheck.Gen.Gen
                                  $ (IApp. IVar Builtin.DPair.DPair
                                         $ IVar Prelude.Types.Nat
                                         $ (ILam.  (MW ExplicitArg {arg:833} : IVar Prelude.Types.Nat)
                                                => (IApp. IVar DerivedGen.X_GADT
                                                        $ IVar {arg:830}
                                                        $ IVar {arg:833}))))))
         IClaim MW
                Export
                []
                (MkTy <DerivedGen.X_GADT>[]
                      (IPi.  (MW ExplicitArg : IVar Data.Fuel.Fuel)
                          -> (IApp. IVar Test.DepTyCheck.Gen.Gen
                                  $ (IApp. IVar Builtin.DPair.DPair
                                         $ IVar Prelude.Types.Nat
                                         $ (ILam.  (MW ExplicitArg {arg:830} : IVar Prelude.Types.Nat)
                                                => (IApp. IVar Builtin.DPair.DPair
                                                        $ IVar Prelude.Types.Nat
                                                        $ (ILam.  (MW ExplicitArg {arg:833} : IVar Prelude.Types.Nat)
                                                               => (IApp. IVar DerivedGen.X_GADT
                                                                       $ IVar {arg:830}
                                                                       $ IVar {arg:833}))))))))
         IClaim MW
                Export
                []
                (MkTy <DerivedGen.X_ADT>[0]
                      (IPi.  (MW ExplicitArg : IVar Data.Fuel.Fuel)
                          -> (MW ExplicitArg {arg:851} : IVar Prelude.Types.Nat)
                          -> (IApp. IVar Test.DepTyCheck.Gen.Gen
                                  $ (IApp. IVar Builtin.DPair.DPair
                                         $ IVar Prelude.Types.Nat
                                         $ (ILam.  (MW ExplicitArg {arg:854} : IVar Prelude.Types.Nat)
                                                => (IApp. IVar DerivedGen.X_ADT
                                                        $ IVar {arg:851}
                                                        $ IVar {arg:854}))))))
         IClaim MW
                Export
                []
                (MkTy <DerivedGen.Y>[]
                      (IPi.  (MW ExplicitArg : IVar Data.Fuel.Fuel)
                          -> (IApp. IVar Test.DepTyCheck.Gen.Gen
                                  $ IVar DerivedGen.Y)))
         IDef <Prelude.Types.Nat>[]
              [ PatClause (IApp. IVar <Prelude.Types.Nat>[]
                               $ IBindVar ^fuel_arg^)
                          (ILocal (ICase (IVar ^fuel_arg^)
                                         (IVar Data.Fuel.Fuel)
                                         [ PatClause (IVar Data.Fuel.Dry)
                                                     (IApp. IVar <<Prelude.Types.Z>>
                                                          $ IVar Data.Fuel.Dry)
                                         , PatClause (IApp. IVar Data.Fuel.More
                                                          $ IBindVar ^sub^fuel_arg^)
                                                     (IApp. IVar Test.DepTyCheck.Gen.oneOf
                                                          $ (IApp. IVar ::
                                                                 $ (IApp. IVar <<Prelude.Types.Z>>
                                                                        $ IVar ^fuel_arg^)
                                                                 $ (IApp. IVar ::
                                                                        $ (IApp. IVar <<Prelude.Types.S>>
                                                                               $ IVar ^sub^fuel_arg^)
                                                                        $ IVar Nil))) ]))
                            IClaim MW
                                   Export
                                   []
                                   (MkTy <<Prelude.Types.Z>>
                                         (IPi.  (MW ExplicitArg : IVar Data.Fuel.Fuel)
                                             -> (IApp. IVar Test.DepTyCheck.Gen.Gen
                                                     $ IVar Prelude.Types.Nat)))
                            IClaim MW
                                   Export
                                   []
                                   (MkTy <<Prelude.Types.S>>
                                         (IPi.  (MW ExplicitArg : IVar Data.Fuel.Fuel)
                                             -> (IApp. IVar Test.DepTyCheck.Gen.Gen
                                                     $ IVar Prelude.Types.Nat)))
                            IDef <<Prelude.Types.Z>>
                                 [ PatClause (IApp. IVar <<Prelude.Types.Z>>
                                                  $ IBindVar ^cons_fuel^)
                                             (IApp. INamedApp (IVar Prelude.pure)
                                                              f
                                                              (IVar Test.DepTyCheck.Gen.Gen)
                                                  $ IVar Prelude.Types.Z) ]
                            IDef <<Prelude.Types.S>>
                                 [ PatClause (IApp. IVar <<Prelude.Types.S>>
                                                  $ IBindVar ^cons_fuel^)
                                             (IApp. IVar >>=
                                                  $ (IApp. IVar <Prelude.Types.Nat>[]
                                                         $ IVar ^cons_fuel^)
                                                  $ (ILam.  (MW ExplicitArg ^bnd^{arg:641} : Implicit False)
                                                         => (IApp. INamedApp (IVar Prelude.pure)
                                                                             f
                                                                             (IVar Test.DepTyCheck.Gen.Gen)
                                                                 $ (IApp. IVar Prelude.Types.S
                                                                        $ IVar ^bnd^{arg:641})))) ] ]
         IDef <DerivedGen.X_ADT>[]
              [ PatClause (IApp. IVar <DerivedGen.X_ADT>[]
                               $ IBindVar ^fuel_arg^)
                          (ILocal (IApp. IVar <<DerivedGen.MkX>>
                                       $ IVar ^fuel_arg^))
                            IClaim MW
                                   Export
                                   []
                                   (MkTy <<DerivedGen.MkX>>
                                         (IPi.  (MW ExplicitArg : IVar Data.Fuel.Fuel)
                                             -> (IApp. IVar Test.DepTyCheck.Gen.Gen
                                                     $ (IApp. IVar Builtin.DPair.DPair
                                                            $ IVar Prelude.Types.Nat
                                                            $ (ILam.  (MW ExplicitArg {arg:851} : IVar Prelude.Types.Nat)
                                                                   => (IApp. IVar Builtin.DPair.DPair
                                                                           $ IVar Prelude.Types.Nat
                                                                           $ (ILam.  (MW ExplicitArg {arg:854} : IVar Prelude.Types.Nat)
                                                                                  => (IApp. IVar DerivedGen.X_ADT
                                                                                          $ IVar {arg:851}
                                                                                          $ IVar {arg:854}))))))))
                            IDef <<DerivedGen.MkX>>
                                 [ PatClause (IApp. IVar <<DerivedGen.MkX>>
                                                  $ IBindVar ^cons_fuel^)
                                             (IApp. IVar >>=
                                                  $ (IApp. IVar <Prelude.Types.Nat>[]
                                                         $ IVar ^cons_fuel^)
                                                  $ (ILam.  (MW ExplicitArg n : Implicit False)
                                                         => (IApp. IVar >>=
                                                                 $ (IApp. IVar <Prelude.Types.Nat>[]
                                                                        $ IVar ^cons_fuel^)
                                                                 $ (ILam.  (MW ExplicitArg m : Implicit False)
                                                                        => (IApp. INamedApp (IVar Prelude.pure)
                                                                                            f
                                                                                            (IVar Test.DepTyCheck.Gen.Gen)
                                                                                $ (IApp. IVar Builtin.DPair.MkDPair
                                                                                       $ Implicit True
                                                                                       $ (IApp. IVar Builtin.DPair.MkDPair
                                                                                              $ Implicit True
                                                                                              $ (IApp. IVar DerivedGen.MkX
                                                                                                     $ IVar n
                                                                                                     $ IVar m)))))))) ] ]
         IDef <DerivedGen.X_GADT>[0]
              [ PatClause (IApp. IVar <DerivedGen.X_GADT>[0]
                               $ IBindVar ^fuel_arg^
                               $ IBindVar {arg:830})
                          (ILocal (IApp. IVar Test.DepTyCheck.Gen.oneOf
                                       $ (IApp. IVar ::
                                              $ (IApp. IVar <<DerivedGen.MkXG_4>>
                                                     $ IVar ^fuel_arg^
                                                     $ IVar {arg:830})
                                              $ (IApp. IVar ::
                                                     $ (IApp. IVar <<DerivedGen.MkXG_5>>
                                                            $ IVar ^fuel_arg^
                                                            $ IVar {arg:830})
                                                     $ IVar Nil))))
                            IClaim MW
                                   Export
                                   []
                                   (MkTy <<DerivedGen.MkXG_4>>
                                         (IPi.  (MW ExplicitArg : IVar Data.Fuel.Fuel)
                                             -> (MW ExplicitArg {arg:830} : IVar Prelude.Types.Nat)
                                             -> (IApp. IVar Test.DepTyCheck.Gen.Gen
                                                     $ (IApp. IVar Builtin.DPair.DPair
                                                            $ IVar Prelude.Types.Nat
                                                            $ (ILam.  (MW ExplicitArg {arg:833} : IVar Prelude.Types.Nat)
                                                                   => (IApp. IVar DerivedGen.X_GADT
                                                                           $ IVar {arg:830}
                                                                           $ IVar {arg:833}))))))
                            IClaim MW
                                   Export
                                   []
                                   (MkTy <<DerivedGen.MkXG_5>>
                                         (IPi.  (MW ExplicitArg : IVar Data.Fuel.Fuel)
                                             -> (MW ExplicitArg {arg:830} : IVar Prelude.Types.Nat)
                                             -> (IApp. IVar Test.DepTyCheck.Gen.Gen
                                                     $ (IApp. IVar Builtin.DPair.DPair
                                                            $ IVar Prelude.Types.Nat
                                                            $ (ILam.  (MW ExplicitArg {arg:833} : IVar Prelude.Types.Nat)
                                                                   => (IApp. IVar DerivedGen.X_GADT
                                                                           $ IVar {arg:830}
                                                                           $ IVar {arg:833}))))))
                            IDef <<DerivedGen.MkXG_4>>
                                 [ PatClause (IApp. IVar <<DerivedGen.MkXG_4>>
                                                  $ IBindVar ^cons_fuel^
                                                  $ (IApp. IVar Prelude.Types.S
                                                         $ (IApp. IVar Prelude.Types.S
                                                                $ (IApp. IVar Prelude.Types.S
                                                                       $ (IApp. IVar Prelude.Types.S
                                                                              $ IVar Prelude.Types.Z)))))
                                             (IApp. INamedApp (IVar Prelude.pure)
                                                              f
                                                              (IVar Test.DepTyCheck.Gen.Gen)
                                                  $ (IApp. IVar Builtin.DPair.MkDPair
                                                         $ Implicit True
                                                         $ IVar DerivedGen.MkXG_4))
                                 , PatClause (IApp. IVar <<DerivedGen.MkXG_4>>
                                                  $ Implicit True
                                                  $ Implicit True)
                                             (IVar empty) ]
                            IDef <<DerivedGen.MkXG_5>>
                                 [ PatClause (IApp. IVar <<DerivedGen.MkXG_5>>
                                                  $ IBindVar ^cons_fuel^
                                                  $ (IApp. IVar Prelude.Types.S
                                                         $ (IApp. IVar Prelude.Types.S
                                                                $ (IApp. IVar Prelude.Types.S
                                                                       $ (IApp. IVar Prelude.Types.S
                                                                              $ (IApp. IVar Prelude.Types.S
                                                                                     $ IVar Prelude.Types.Z))))))
                                             (IApp. IVar >>=
                                                  $ (IApp. IVar <Prelude.Types.Nat>[]
                                                         $ IVar ^cons_fuel^)
                                                  $ (ILam.  (MW ExplicitArg m : Implicit False)
                                                         => (IApp. INamedApp (IVar Prelude.pure)
                                                                             f
                                                                             (IVar Test.DepTyCheck.Gen.Gen)
                                                                 $ (IApp. IVar Builtin.DPair.MkDPair
                                                                        $ Implicit True
                                                                        $ INamedApp (IVar DerivedGen.MkXG_5)
                                                                                    m
                                                                                    (IVar m)))))
                                 , PatClause (IApp. IVar <<DerivedGen.MkXG_5>>
                                                  $ Implicit True
                                                  $ Implicit True)
                                             (IVar empty) ] ]
         IDef <DerivedGen.X_GADT>[]
              [ PatClause (IApp. IVar <DerivedGen.X_GADT>[]
                               $ IBindVar ^fuel_arg^)
                          (ILocal (IApp. IVar Test.DepTyCheck.Gen.oneOf
                                       $ (IApp. IVar ::
                                              $ (IApp. IVar <<DerivedGen.MkXG_4>>
                                                     $ IVar ^fuel_arg^)
                                              $ (IApp. IVar ::
                                                     $ (IApp. IVar <<DerivedGen.MkXG_5>>
                                                            $ IVar ^fuel_arg^)
                                                     $ IVar Nil))))
                            IClaim MW
                                   Export
                                   []
                                   (MkTy <<DerivedGen.MkXG_4>>
                                         (IPi.  (MW ExplicitArg : IVar Data.Fuel.Fuel)
                                             -> (IApp. IVar Test.DepTyCheck.Gen.Gen
                                                     $ (IApp. IVar Builtin.DPair.DPair
                                                            $ IVar Prelude.Types.Nat
                                                            $ (ILam.  (MW ExplicitArg {arg:830} : IVar Prelude.Types.Nat)
                                                                   => (IApp. IVar Builtin.DPair.DPair
                                                                           $ IVar Prelude.Types.Nat
                                                                           $ (ILam.  (MW ExplicitArg {arg:833} : IVar Prelude.Types.Nat)
                                                                                  => (IApp. IVar DerivedGen.X_GADT
                                                                                          $ IVar {arg:830}
                                                                                          $ IVar {arg:833}))))))))
                            IClaim MW
                                   Export
                                   []
                                   (MkTy <<DerivedGen.MkXG_5>>
                                         (IPi.  (MW ExplicitArg : IVar Data.Fuel.Fuel)
                                             -> (IApp. IVar Test.DepTyCheck.Gen.Gen
                                                     $ (IApp. IVar Builtin.DPair.DPair
                                                            $ IVar Prelude.Types.Nat
                                                            $ (ILam.  (MW ExplicitArg {arg:830} : IVar Prelude.Types.Nat)
                                                                   => (IApp. IVar Builtin.DPair.DPair
                                                                           $ IVar Prelude.Types.Nat
                                                                           $ (ILam.  (MW ExplicitArg {arg:833} : IVar Prelude.Types.Nat)
                                                                                  => (IApp. IVar DerivedGen.X_GADT
                                                                                          $ IVar {arg:830}
                                                                                          $ IVar {arg:833}))))))))
                            IDef <<DerivedGen.MkXG_4>>
                                 [ PatClause (IApp. IVar <<DerivedGen.MkXG_4>>
                                                  $ IBindVar ^cons_fuel^)
                                             (IApp. INamedApp (IVar Prelude.pure)
                                                              f
                                                              (IVar Test.DepTyCheck.Gen.Gen)
                                                  $ (IApp. IVar Builtin.DPair.MkDPair
                                                         $ Implicit True
                                                         $ (IApp. IVar Builtin.DPair.MkDPair
                                                                $ Implicit True
                                                                $ IVar DerivedGen.MkXG_4))) ]
                            IDef <<DerivedGen.MkXG_5>>
                                 [ PatClause (IApp. IVar <<DerivedGen.MkXG_5>>
                                                  $ IBindVar ^cons_fuel^)
                                             (IApp. IVar >>=
                                                  $ (IApp. IVar <Prelude.Types.Nat>[]
                                                         $ IVar ^cons_fuel^)
                                                  $ (ILam.  (MW ExplicitArg m : Implicit False)
                                                         => (IApp. INamedApp (IVar Prelude.pure)
                                                                             f
                                                                             (IVar Test.DepTyCheck.Gen.Gen)
                                                                 $ (IApp. IVar Builtin.DPair.MkDPair
                                                                        $ Implicit True
                                                                        $ (IApp. IVar Builtin.DPair.MkDPair
                                                                               $ Implicit True
                                                                               $ INamedApp (IVar DerivedGen.MkXG_5)
                                                                                           m
                                                                                           (IVar m)))))) ] ]
         IDef <DerivedGen.X_ADT>[0]
              [ PatClause (IApp. IVar <DerivedGen.X_ADT>[0]
                               $ IBindVar ^fuel_arg^
                               $ IBindVar {arg:851})
                          (ILocal (IApp. IVar <<DerivedGen.MkX>>
                                       $ IVar ^fuel_arg^
                                       $ IVar {arg:851}))
                            IClaim MW
                                   Export
                                   []
                                   (MkTy <<DerivedGen.MkX>>
                                         (IPi.  (MW ExplicitArg : IVar Data.Fuel.Fuel)
                                             -> (MW ExplicitArg {arg:851} : IVar Prelude.Types.Nat)
                                             -> (IApp. IVar Test.DepTyCheck.Gen.Gen
                                                     $ (IApp. IVar Builtin.DPair.DPair
                                                            $ IVar Prelude.Types.Nat
                                                            $ (ILam.  (MW ExplicitArg {arg:854} : IVar Prelude.Types.Nat)
                                                                   => (IApp. IVar DerivedGen.X_ADT
                                                                           $ IVar {arg:851}
                                                                           $ IVar {arg:854}))))))
                            IDef <<DerivedGen.MkX>>
                                 [ PatClause (IApp. IVar <<DerivedGen.MkX>>
                                                  $ IBindVar ^cons_fuel^
                                                  $ IBindVar n)
                                             (IApp. IVar >>=
                                                  $ (IApp. IVar <Prelude.Types.Nat>[]
                                                         $ IVar ^cons_fuel^)
                                                  $ (ILam.  (MW ExplicitArg m : Implicit False)
                                                         => (IApp. INamedApp (IVar Prelude.pure)
                                                                             f
                                                                             (IVar Test.DepTyCheck.Gen.Gen)
                                                                 $ (IApp. IVar Builtin.DPair.MkDPair
                                                                        $ Implicit True
                                                                        $ (IApp. IVar DerivedGen.MkX
                                                                               $ IVar n
                                                                               $ IVar m))))) ] ]
         IDef <DerivedGen.Y>[]
              [ PatClause (IApp. IVar <DerivedGen.Y>[] $ IBindVar ^fuel_arg^)
                          (ILocal (IApp. IVar Test.DepTyCheck.Gen.oneOf
                                       $ (IApp. IVar ::
                                              $ (IApp. IVar <<DerivedGen.MkY_LR>>
                                                     $ IVar ^fuel_arg^)
                                              $ (IApp. IVar ::
                                                     $ (IApp. IVar <<DerivedGen.MkY_RL>>
                                                            $ IVar ^fuel_arg^)
                                                     $ IVar Nil))))
                            IClaim MW
                                   Export
                                   []
                                   (MkTy <<DerivedGen.MkY_LR>>
                                         (IPi.  (MW ExplicitArg : IVar Data.Fuel.Fuel)
                                             -> (IApp. IVar Test.DepTyCheck.Gen.Gen
                                                     $ IVar DerivedGen.Y)))
                            IClaim MW
                                   Export
                                   []
                                   (MkTy <<DerivedGen.MkY_RL>>
                                         (IPi.  (MW ExplicitArg : IVar Data.Fuel.Fuel)
                                             -> (IApp. IVar Test.DepTyCheck.Gen.Gen
                                                     $ IVar DerivedGen.Y)))
                            IDef <<DerivedGen.MkY_LR>>
                                 [ PatClause (IApp. IVar <<DerivedGen.MkY_LR>>
                                                  $ IBindVar ^cons_fuel^)
                                             (IApp. IVar >>=
                                                  $ (IApp. IVar <DerivedGen.X_ADT>[]
                                                         $ IVar ^cons_fuel^)
                                                  $ (ILam.  (MW ExplicitArg {lamc:0} : Implicit False)
                                                         => ICase (IVar {lamc:0})
                                                                  (Implicit False)
                                                                  [ PatClause (IApp. IVar Builtin.DPair.MkDPair
                                                                                   $ IBindVar n
                                                                                   $ (IApp. IVar Builtin.DPair.MkDPair
                                                                                          $ IBindVar k
                                                                                          $ IBindVar ^bnd^{arg:875}))
                                                                              (IApp. IVar >>=
                                                                                   $ (IApp. IVar <DerivedGen.X_GADT>[0]
                                                                                          $ IVar ^cons_fuel^
                                                                                          $ IVar n)
                                                                                   $ (ILam.  (MW ExplicitArg {lamc:0} : Implicit False)
                                                                                          => ICase (IVar {lamc:0})
                                                                                                   (Implicit False)
                                                                                                   [ PatClause (IApp. IVar Builtin.DPair.MkDPair
                                                                                                                    $ IBindVar m
                                                                                                                    $ IBindVar ^bnd^{arg:872})
                                                                                                               (IApp. INamedApp (IVar Prelude.pure)
                                                                                                                                f
                                                                                                                                (IVar Test.DepTyCheck.Gen.Gen)
                                                                                                                    $ (IApp. INamedApp (INamedApp (INamedApp (IVar DerivedGen.MkY_LR)
                                                                                                                                                             k
                                                                                                                                                             (IVar k))
                                                                                                                                                  m
                                                                                                                                                  (IVar m))
                                                                                                                                       n
                                                                                                                                       (IVar n)
                                                                                                                           $ IVar ^bnd^{arg:872}
                                                                                                                           $ IVar ^bnd^{arg:875})) ])) ])) ]
                            IDef <<DerivedGen.MkY_RL>>
                                 [ PatClause (IApp. IVar <<DerivedGen.MkY_RL>>
                                                  $ IBindVar ^cons_fuel^)
                                             (IApp. IVar >>=
                                                  $ (IApp. IVar <DerivedGen.X_GADT>[]
                                                         $ IVar ^cons_fuel^)
                                                  $ (ILam.  (MW ExplicitArg {lamc:0} : Implicit False)
                                                         => ICase (IVar {lamc:0})
                                                                  (Implicit False)
                                                                  [ PatClause (IApp. IVar Builtin.DPair.MkDPair
                                                                                   $ IBindVar n
                                                                                   $ (IApp. IVar Builtin.DPair.MkDPair
                                                                                          $ IBindVar k
                                                                                          $ IBindVar ^bnd^{arg:884}))
                                                                              (IApp. IVar >>=
                                                                                   $ (IApp. IVar <DerivedGen.X_ADT>[0]
                                                                                          $ IVar ^cons_fuel^
                                                                                          $ IVar n)
                                                                                   $ (ILam.  (MW ExplicitArg {lamc:0} : Implicit False)
                                                                                          => ICase (IVar {lamc:0})
                                                                                                   (Implicit False)
                                                                                                   [ PatClause (IApp. IVar Builtin.DPair.MkDPair
                                                                                                                    $ IBindVar m
                                                                                                                    $ IBindVar ^bnd^{arg:881})
                                                                                                               (IApp. INamedApp (IVar Prelude.pure)
                                                                                                                                f
                                                                                                                                (IVar Test.DepTyCheck.Gen.Gen)
                                                                                                                    $ (IApp. INamedApp (INamedApp (INamedApp (IVar DerivedGen.MkY_RL)
                                                                                                                                                             k
                                                                                                                                                             (IVar k))
                                                                                                                                                  m
                                                                                                                                                  (IVar m))
                                                                                                                                       n
                                                                                                                                       (IVar n)
                                                                                                                           $ IVar ^bnd^{arg:881}
                                                                                                                           $ IVar ^bnd^{arg:884})) ])) ])) ] ]
