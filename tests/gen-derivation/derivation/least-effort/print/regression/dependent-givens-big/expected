1/3: Building AlternativeCore (AlternativeCore.idr)
2/3: Building PrintDerivation (PrintDerivation.idr)
3/3: Building DerivedGen (DerivedGen.idr)
LOG gen.auto.derive.infra:0: type: (arg : Fuel) -> (n : Nat) -> (v : VectMaybeAnyType n) -> Gen (i : Fin n ** (t : MaybeAnyType ** AtIndex n i t v))
LOG gen.auto.derive.infra:0: 
ILam.  (MW ExplicitArg ^outmost-fuel^ : IVar Data.Fuel.Fuel)
    => (MW ExplicitArg n : IVar Prelude.Types.Nat)
    => (MW ExplicitArg v : IApp. IVar DerivedGen.VectMaybeAnyType.VectMaybeAnyType
                               $ IVar n)
    => ILocal (IApp. IVar <DerivedGen.VectMaybeAnyType.AtIndex>[0, 3]
                   $ IVar ^outmost-fuel^
                   $ IVar n
                   $ IVar v)
         IClaim MW
                Export
                []
                (MkTy <DerivedGen.VectMaybeAnyType.AtIndex>[0, 3]
                      (IPi.  (MW ExplicitArg : IVar Data.Fuel.Fuel)
                          -> (MW ExplicitArg n : IVar Prelude.Types.Nat)
                          -> (MW ExplicitArg {arg:1211} : IApp. IVar DerivedGen.VectMaybeAnyType.VectMaybeAnyType
                                                              $ IVar n)
                          -> (IApp. IVar Test.DepTyCheck.Gen.Gen
                                  $ (IApp. IVar Builtin.DPair.DPair
                                         $ (IApp. IVar Data.Fin.Fin $ IVar n)
                                         $ (ILam.  (MW ExplicitArg {arg:1205} : IApp. IVar Data.Fin.Fin
                                                                                    $ IVar n)
                                                => (IApp. IVar Builtin.DPair.DPair
                                                        $ IVar DerivedGen.MaybeAnyType.MaybeAnyType
                                                        $ (ILam.  (MW ExplicitArg {arg:1208} : IVar DerivedGen.MaybeAnyType.MaybeAnyType)
                                                               => (IApp. IVar DerivedGen.VectMaybeAnyType.AtIndex
                                                                       $ IVar n
                                                                       $ IVar {arg:1205}
                                                                       $ IVar {arg:1208}
                                                                       $ IVar {arg:1211}))))))))
         IDef <DerivedGen.VectMaybeAnyType.AtIndex>[0, 3]
              [ PatClause (IApp. IVar <DerivedGen.VectMaybeAnyType.AtIndex>[0, 3]
                               $ IBindVar ^fuel_arg^
                               $ IBindVar n
                               $ IBindVar {arg:1211})
                          (ILocal (ICase (IVar ^fuel_arg^)
                                         (IVar Data.Fuel.Fuel)
                                         [ PatClause (IVar Data.Fuel.Dry)
                                                     (IApp. IVar <<DerivedGen.VectMaybeAnyType.Here>>
                                                          $ IVar Data.Fuel.Dry
                                                          $ IVar n
                                                          $ IVar {arg:1211})
                                         , PatClause (IApp. IVar Data.Fuel.More
                                                          $ IBindVar ^sub^fuel_arg^)
                                                     (IApp. IVar Test.DepTyCheck.Gen.oneOf
                                                          $ (IApp. IVar ::
                                                                 $ (IApp. IVar <<DerivedGen.VectMaybeAnyType.Here>>
                                                                        $ IVar ^fuel_arg^
                                                                        $ IVar n
                                                                        $ IVar {arg:1211})
                                                                 $ (IApp. IVar ::
                                                                        $ (IApp. IVar <<DerivedGen.VectMaybeAnyType.There>>
                                                                               $ IVar ^sub^fuel_arg^
                                                                               $ IVar n
                                                                               $ IVar {arg:1211})
                                                                        $ IVar Nil))) ]))
                            IClaim MW
                                   Export
                                   []
                                   (MkTy <<DerivedGen.VectMaybeAnyType.Here>>
                                         (IPi.  (MW ExplicitArg : IVar Data.Fuel.Fuel)
                                             -> (MW ExplicitArg n : IVar Prelude.Types.Nat)
                                             -> (MW ExplicitArg {arg:1211} : IApp. IVar DerivedGen.VectMaybeAnyType.VectMaybeAnyType
                                                                                 $ IVar n)
                                             -> (IApp. IVar Test.DepTyCheck.Gen.Gen
                                                     $ (IApp. IVar Builtin.DPair.DPair
                                                            $ (IApp. IVar Data.Fin.Fin
                                                                   $ IVar n)
                                                            $ (ILam.  (MW ExplicitArg {arg:1205} : IApp. IVar Data.Fin.Fin
                                                                                                       $ IVar n)
                                                                   => (IApp. IVar Builtin.DPair.DPair
                                                                           $ IVar DerivedGen.MaybeAnyType.MaybeAnyType
                                                                           $ (ILam.  (MW ExplicitArg {arg:1208} : IVar DerivedGen.MaybeAnyType.MaybeAnyType)
                                                                                  => (IApp. IVar DerivedGen.VectMaybeAnyType.AtIndex
                                                                                          $ IVar n
                                                                                          $ IVar {arg:1205}
                                                                                          $ IVar {arg:1208}
                                                                                          $ IVar {arg:1211}))))))))
                            IClaim MW
                                   Export
                                   []
                                   (MkTy <<DerivedGen.VectMaybeAnyType.There>>
                                         (IPi.  (MW ExplicitArg : IVar Data.Fuel.Fuel)
                                             -> (MW ExplicitArg n : IVar Prelude.Types.Nat)
                                             -> (MW ExplicitArg {arg:1211} : IApp. IVar DerivedGen.VectMaybeAnyType.VectMaybeAnyType
                                                                                 $ IVar n)
                                             -> (IApp. IVar Test.DepTyCheck.Gen.Gen
                                                     $ (IApp. IVar Builtin.DPair.DPair
                                                            $ (IApp. IVar Data.Fin.Fin
                                                                   $ IVar n)
                                                            $ (ILam.  (MW ExplicitArg {arg:1205} : IApp. IVar Data.Fin.Fin
                                                                                                       $ IVar n)
                                                                   => (IApp. IVar Builtin.DPair.DPair
                                                                           $ IVar DerivedGen.MaybeAnyType.MaybeAnyType
                                                                           $ (ILam.  (MW ExplicitArg {arg:1208} : IVar DerivedGen.MaybeAnyType.MaybeAnyType)
                                                                                  => (IApp. IVar DerivedGen.VectMaybeAnyType.AtIndex
                                                                                          $ IVar n
                                                                                          $ IVar {arg:1205}
                                                                                          $ IVar {arg:1208}
                                                                                          $ IVar {arg:1211}))))))))
                            IDef <<DerivedGen.VectMaybeAnyType.Here>>
                                 [ PatClause (IApp. IVar <<DerivedGen.VectMaybeAnyType.Here>>
                                                  $ IBindVar ^cons_fuel^
                                                  $ (IApp. IVar Prelude.Types.S
                                                         $ IBindVar n)
                                                  $ (IApp. INamedApp (IVar DerivedGen.VectMaybeAnyType.(::))
                                                                     n
                                                                     (Implicit True)
                                                         $ IBindVar x
                                                         $ IBindVar xs))
                                             (IApp. INamedApp (IVar Prelude.pure)
                                                              f
                                                              (IVar Test.DepTyCheck.Gen.Gen)
                                                  $ (IApp. IVar Builtin.DPair.MkDPair
                                                         $ Implicit True
                                                         $ (IApp. IVar Builtin.DPair.MkDPair
                                                                $ Implicit True
                                                                $ INamedApp (INamedApp (INamedApp (IVar DerivedGen.VectMaybeAnyType.Here)
                                                                                                  n
                                                                                                  (IVar n))
                                                                                       xs
                                                                                       (IVar xs))
                                                                            x
                                                                            (IVar x))))
                                 , PatClause (IApp. IVar <<DerivedGen.VectMaybeAnyType.Here>>
                                                  $ Implicit True
                                                  $ Implicit True
                                                  $ Implicit True)
                                             (IVar empty) ]
                            IDef <<DerivedGen.VectMaybeAnyType.There>>
                                 [ PatClause (IApp. IVar <<DerivedGen.VectMaybeAnyType.There>>
                                                  $ IBindVar ^cons_fuel^
                                                  $ (IApp. IVar Prelude.Types.S
                                                         $ IBindVar n)
                                                  $ (IApp. INamedApp (IVar DerivedGen.VectMaybeAnyType.(::))
                                                                     n
                                                                     (Implicit True)
                                                         $ IBindVar z
                                                         $ IBindVar zs))
                                             (IApp. IVar >>=
                                                  $ (IApp. IVar <DerivedGen.VectMaybeAnyType.AtIndex>[0, 3]
                                                         $ IVar ^cons_fuel^
                                                         $ IVar n
                                                         $ IVar zs)
                                                  $ (ILam.  (MW ExplicitArg {lamc:0} : Implicit False)
                                                         => ICase (IVar {lamc:0})
                                                                  (Implicit False)
                                                                  [ PatClause (IApp. IVar Builtin.DPair.MkDPair
                                                                                   $ IBindVar i
                                                                                   $ (IApp. IVar Builtin.DPair.MkDPair
                                                                                          $ IBindVar x
                                                                                          $ IBindVar ^bnd^{arg:1225}))
                                                                              (IApp. INamedApp (IVar Prelude.pure)
                                                                                               f
                                                                                               (IVar Test.DepTyCheck.Gen.Gen)
                                                                                   $ (IApp. IVar Builtin.DPair.MkDPair
                                                                                          $ Implicit True
                                                                                          $ (IApp. IVar Builtin.DPair.MkDPair
                                                                                                 $ Implicit True
                                                                                                 $ (IApp. INamedApp (INamedApp (INamedApp (INamedApp (INamedApp (IVar DerivedGen.VectMaybeAnyType.There)
                                                                                                                                                                z
                                                                                                                                                                (IVar z))
                                                                                                                                                     n
                                                                                                                                                     (IVar n))
                                                                                                                                          zs
                                                                                                                                          (IVar zs))
                                                                                                                               x
                                                                                                                               (IVar x))
                                                                                                                    i
                                                                                                                    (IVar i)
                                                                                                        $ IVar ^bnd^{arg:1225})))) ]))
                                 , PatClause (IApp. IVar <<DerivedGen.VectMaybeAnyType.There>>
                                                  $ Implicit True
                                                  $ Implicit True
                                                  $ Implicit True)
                                             (IVar empty) ] ]
