1/3: Building AlternativeCore (AlternativeCore.idr)
2/3: Building PrintDerivation (PrintDerivation.idr)
3/3: Building DerivedGen (DerivedGen.idr)
LOG gen.auto.derive.infra:0: type: (arg : Fuel) -> Gen (a : Type ** X a)
LOG gen.auto.derive.infra:0: 
ILam.  (MW ExplicitArg ^outmost-fuel^ : IVar Data.Fuel.Fuel)
    => ILocal (IApp. IVar <DerivedGen.X>[] $ IVar ^outmost-fuel^)
         IClaim MW
                Export
                []
                (MkTy <DerivedGen.X>[]
                      (IPi.  (MW ExplicitArg : IVar Data.Fuel.Fuel)
                          -> (IApp. IVar Test.DepTyCheck.Gen.Gen
                                  $ (IApp. IVar Builtin.DPair.DPair
                                         $ IType
                                         $ (ILam.  (MW ExplicitArg {arg:839} : IType)
                                                => (IApp. IVar DerivedGen.X
                                                        $ IVar {arg:839}))))))
         IDef <DerivedGen.X>[]
              [ PatClause (IApp. IVar <DerivedGen.X>[] $ IBindVar ^fuel_arg^)
                          (ILocal (ICase (IVar ^fuel_arg^)
                                         (IVar Data.Fuel.Fuel)
                                         [ PatClause (IVar Data.Fuel.Dry)
                                                     (IApp. INamedApp (IVar Test.DepTyCheck.Gen.oneOf)
                                                                      description
                                                                      (IApp. IVar Just
                                                                           $ IPrimVal DerivedGen.X[] (dry fuel))
                                                          $ (IApp. IVar ::
                                                                 $ (IApp. IVar <<DerivedGen.X0>>
                                                                        $ IVar Data.Fuel.Dry)
                                                                 $ (IApp. IVar ::
                                                                        $ (IApp. IVar <<DerivedGen.X1>>
                                                                               $ IVar Data.Fuel.Dry)
                                                                        $ IVar Nil)))
                                         , PatClause (IApp. IVar Data.Fuel.More
                                                          $ IBindVar ^sub^fuel_arg^)
                                                     (IApp. INamedApp (IVar Test.DepTyCheck.Gen.oneOf)
                                                                      description
                                                                      (IApp. IVar Just
                                                                           $ IPrimVal DerivedGen.X[] (spend fuel))
                                                          $ (IApp. IVar ::
                                                                 $ (IApp. IVar <<DerivedGen.X0>>
                                                                        $ IVar ^fuel_arg^)
                                                                 $ (IApp. IVar ::
                                                                        $ (IApp. IVar <<DerivedGen.X1>>
                                                                               $ IVar ^fuel_arg^)
                                                                        $ (IApp. IVar ::
                                                                               $ (IApp. IVar <<DerivedGen.X2>>
                                                                                      $ IVar ^sub^fuel_arg^)
                                                                               $ IVar Nil)))) ]))
                            IClaim MW
                                   Export
                                   []
                                   (MkTy <<DerivedGen.X0>>
                                         (IPi.  (MW ExplicitArg : IVar Data.Fuel.Fuel)
                                             -> (IApp. IVar Test.DepTyCheck.Gen.Gen
                                                     $ (IApp. IVar Builtin.DPair.DPair
                                                            $ IType
                                                            $ (ILam.  (MW ExplicitArg {arg:839} : IType)
                                                                   => (IApp. IVar DerivedGen.X
                                                                           $ IVar {arg:839}))))))
                            IClaim MW
                                   Export
                                   []
                                   (MkTy <<DerivedGen.X1>>
                                         (IPi.  (MW ExplicitArg : IVar Data.Fuel.Fuel)
                                             -> (IApp. IVar Test.DepTyCheck.Gen.Gen
                                                     $ (IApp. IVar Builtin.DPair.DPair
                                                            $ IType
                                                            $ (ILam.  (MW ExplicitArg {arg:839} : IType)
                                                                   => (IApp. IVar DerivedGen.X
                                                                           $ IVar {arg:839}))))))
                            IClaim MW
                                   Export
                                   []
                                   (MkTy <<DerivedGen.X2>>
                                         (IPi.  (MW ExplicitArg : IVar Data.Fuel.Fuel)
                                             -> (IApp. IVar Test.DepTyCheck.Gen.Gen
                                                     $ (IApp. IVar Builtin.DPair.DPair
                                                            $ IType
                                                            $ (ILam.  (MW ExplicitArg {arg:839} : IType)
                                                                   => (IApp. IVar DerivedGen.X
                                                                           $ IVar {arg:839}))))))
                            IDef <<DerivedGen.X0>>
                                 [ PatClause (IApp. IVar <<DerivedGen.X0>>
                                                  $ IBindVar ^cons_fuel^)
                                             (IVar empty) ]
                            IDef <<DerivedGen.X1>>
                                 [ PatClause (IApp. IVar <<DerivedGen.X1>>
                                                  $ IBindVar ^cons_fuel^)
                                             (IVar empty) ]
                            IDef <<DerivedGen.X2>>
                                 [ PatClause (IApp. IVar <<DerivedGen.X2>>
                                                  $ IBindVar ^cons_fuel^)
                                             (IVar empty) ] ]
