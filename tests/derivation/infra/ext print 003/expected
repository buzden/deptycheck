1/3: Building AlternativeCore (AlternativeCore.idr)
2/3: Building PrintDerivation (PrintDerivation.idr)
3/3: Building DerivedGen (DerivedGen.idr)
LOG gen.auto.derive.infra:0: type: (arg : Fuel) -> {auto conArg : ((arg : Fuel) -> Gen MaybeEmpty String)} -> {auto conArg : ((arg : Fuel) -> Gen MaybeEmpty Nat)} -> Gen MaybeEmpty XSN
LOG gen.auto.derive.infra:0: 
ILam.  (MW ExplicitArg ^outmost-fuel^ : IVar Data.Fuel.Fuel)
    => (MW AutoImplicit external^<^prim^.String>[] : IPi.  (MW ExplicitArg {arg:3634} : IVar Data.Fuel.Fuel)
                                                        -> (IApp. IVar Test.DepTyCheck.Gen.Gen
                                                                $ IVar Test.DepTyCheck.Gen.Emptiness.MaybeEmpty
                                                                $ IPrimVal String))
    => (MW AutoImplicit external^<Prelude.Types.Nat>[] : IPi.  (MW ExplicitArg {arg:3641} : IVar Data.Fuel.Fuel)
                                                            -> (IApp. IVar Test.DepTyCheck.Gen.Gen
                                                                    $ IVar Test.DepTyCheck.Gen.Emptiness.MaybeEmpty
                                                                    $ IVar Prelude.Types.Nat))
    => ILocal (IApp. IVar <AlternativeCore.XSN>[] $ IVar ^outmost-fuel^)
         IClaim MW
                Export
                []
                (MkTy <AlternativeCore.XSN>[]
                      (IPi.  (MW ExplicitArg : IVar Data.Fuel.Fuel)
                          -> (IApp. IVar Test.DepTyCheck.Gen.Gen
                                  $ IVar Test.DepTyCheck.Gen.Emptiness.MaybeEmpty
                                  $ IVar AlternativeCore.XSN)))
         IDef <AlternativeCore.XSN>[]
              [ PatClause (IApp. IVar <AlternativeCore.XSN>[] $ IBindVar fuel)
                          (IApp. IVar <*>
                               $ (IApp. IVar <$>
                                      $ IVar MkXSN
                                      $ (IApp. IVar external^<^prim^.String>[]
                                             $ IVar ^outmost-fuel^))
                               $ (IApp. IVar external^<Prelude.Types.Nat>[]
                                      $ IVar ^outmost-fuel^)) ]
