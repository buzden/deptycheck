1/1: Building ValidateInput (ValidateInput.idr)
Error: While processing right hand side of genOfConcreteGen. Error during reflection: Target type's argument must be a variable name

ValidateInput:1
 12 |   MkY : Y Int String
 13 | 
 14 | --- Gen MaybeEmpty of strange things ---
 15 | 
 16 | genOfConcreteGen : Fuel -> Gen MaybeEmpty $ Gen MaybeEmpty X
                                                      ^^^^^^^^^^

Error: While processing right hand side of genOfLazies. Error during reflection: Target type is not a simple name

ValidateInput:2
 15 | 
 16 | genOfConcreteGen : Fuel -> Gen MaybeEmpty $ Gen MaybeEmpty X
 17 | genOfConcreteGen = deriveGen
 18 | 
 19 | genOfLazies : Fuel -> Gen MaybeEmpty $ Lazy X
                                             ^^^^^^

Error: While processing right hand side of genOfInfs. Error during reflection: Target type is not a simple name

ValidateInput:3
 18 | 
 19 | genOfLazies : Fuel -> Gen MaybeEmpty $ Lazy X
 20 | genOfLazies = deriveGen
 21 | 
 22 | genOfInfs : Fuel -> Gen MaybeEmpty $ Inf X
                                           ^^^^^

Error: While processing right hand side of genOfDPair. Error during reflection: The result type of the generator function must be of type "`Gen MaybeEmpty` of desired result"

ValidateInput:4
 21 | 
 22 | genOfInfs : Fuel -> Gen MaybeEmpty $ Inf X
 23 | genOfInfs = deriveGen
 24 | 
 25 | genOfDPair : Fuel -> (a ** b ** Gen MaybeEmpty $ Y a b)
                              ^^

Error: While processing right hand side of genOfPair. Error during reflection: The result type of the generator function must be of type "`Gen MaybeEmpty` of desired result"

ValidateInput:5
 24 | 
 25 | genOfDPair : Fuel -> (a ** b ** Gen MaybeEmpty $ Y a b)
 26 | genOfDPair = deriveGen
 27 | 
 28 | genOfPair : Fuel -> (a, b : Type) -> (Gen MaybeEmpty (Y a b), Gen MaybeEmpty (Y a b))
                                            ^^^^^^^^^^^^^^^^^^^^^^^

Error: While processing right hand side of genOfPair'. Error during reflection: The result type of the generator function must be of type "`Gen MaybeEmpty` of desired result"

ValidateInput:6
 27 | 
 28 | genOfPair : Fuel -> (a, b : Type) -> (Gen MaybeEmpty (Y a b), Gen MaybeEmpty (Y a b))
 29 | genOfPair = deriveGen
 30 | 
 31 | genOfPair' : Fuel -> (a, b : Type) -> (Gen MaybeEmpty (Y a b), Gen MaybeEmpty X)
                                             ^^^^^^^^^^^^^^^^^^^^^^^

Error: While processing right hand side of genOfFuns_pur. Error during reflection: Target type is not a simple name

ValidateInput:7
 30 | 
 31 | genOfPair' : Fuel -> (a, b : Type) -> (Gen MaybeEmpty (Y a b), Gen MaybeEmpty X)
 32 | genOfPair' = deriveGen
 33 | 
 34 | genOfFuns_pur : Fuel -> Gen MaybeEmpty $ (a : Type) -> (b : Type) -> Y a b
                                                ^

Error: While processing right hand side of genOfFuns_pur0s. Error during reflection: Target type is not a simple name

ValidateInput:8
 33 | 
 34 | genOfFuns_pur : Fuel -> Gen MaybeEmpty $ (a : Type) -> (b : Type) -> Y a b
 35 | genOfFuns_pur = deriveGen
 36 | 
 37 | genOfFuns_pur0s : Fuel -> Gen MaybeEmpty $ (0 a : Type) -> (0 b : Type) -> Y a b
                                                    ^

Error: While processing right hand side of genOfFuns_pur1s. Error during reflection: Target type is not a simple name

ValidateInput:9
 36 | 
 37 | genOfFuns_pur0s : Fuel -> Gen MaybeEmpty $ (0 a : Type) -> (0 b : Type) -> Y a b
 38 | genOfFuns_pur0s = deriveGen
 39 | 
 40 | genOfFuns_pur1s : Fuel -> Gen MaybeEmpty $ (1 a : Type) -> (1 b : Type) -> Y a b
                                                    ^

Error: While processing right hand side of genOfFuns_ins_pair. Error during reflection: Target type is not a simple name

ValidateInput:10
 39 | 
 40 | genOfFuns_pur1s : Fuel -> Gen MaybeEmpty $ (1 a : Type) -> (1 b : Type) -> Y a b
 41 | genOfFuns_pur1s = deriveGen
 42 | 
 43 | genOfFuns_ins_pair : Fuel -> Gen MaybeEmpty (a ** ((b : Type) -> Y a b))
                                                          ^

Error: While processing right hand side of genOfFuns_ins_pair0. Error during reflection: Target type is not a simple name

ValidateInput:11
 42 | 
 43 | genOfFuns_ins_pair : Fuel -> Gen MaybeEmpty (a ** ((b : Type) -> Y a b))
 44 | genOfFuns_ins_pair = deriveGen
 45 | 
 46 | genOfFuns_ins_pair0 : Fuel -> Gen MaybeEmpty (a ** ((0 b : Type) -> Y a b))
                                                             ^

Error: While processing right hand side of genOfFuns_ins_pair1. Error during reflection: Target type is not a simple name

ValidateInput:12
 45 | 
 46 | genOfFuns_ins_pair0 : Fuel -> Gen MaybeEmpty (a ** ((0 b : Type) -> Y a b))
 47 | genOfFuns_ins_pair0 = deriveGen
 48 | 
 49 | genOfFuns_ins_pair1 : Fuel -> Gen MaybeEmpty (a ** ((1 b : Type) -> Y a b))
                                                             ^

Error: While processing right hand side of genOfFuns_out_pair. Error during reflection: Target type is not a simple name

ValidateInput:13
 48 | 
 49 | genOfFuns_ins_pair1 : Fuel -> Gen MaybeEmpty (a ** ((1 b : Type) -> Y a b))
 50 | genOfFuns_ins_pair1 = deriveGen
 51 | 
 52 | genOfFuns_out_pair : Fuel -> Gen MaybeEmpty $ (b : Type) -> (a ** Y a b)
                                                     ^

Error: While processing right hand side of genOfFuns_out_pair0. Error during reflection: Target type is not a simple name

ValidateInput:14
 51 | 
 52 | genOfFuns_out_pair : Fuel -> Gen MaybeEmpty $ (b : Type) -> (a ** Y a b)
 53 | genOfFuns_out_pair = deriveGen
 54 | 
 55 | genOfFuns_out_pair0 : Fuel -> Gen MaybeEmpty $ (0 b : Type) -> (a ** Y a b)
                                                        ^

Error: While processing right hand side of genOfFuns_out_pair1. Error during reflection: Target type is not a simple name

ValidateInput:15
 54 | 
 55 | genOfFuns_out_pair0 : Fuel -> Gen MaybeEmpty $ (0 b : Type) -> (a ** Y a b)
 56 | genOfFuns_out_pair0 = deriveGen
 57 | 
 58 | genOfFuns_out_pair1 : Fuel -> Gen MaybeEmpty $ (1 b : Type) -> (a ** Y a b)
                                                        ^

Error: While processing right hand side of nonEmptyGen. Error during reflection: Only `GenBeEmptyStatic` variant of generator is supported, `Test.DepTyCheck.Gen.Emptiness.NonEmpty` is given

ValidateInput:16
 57 | 
 58 | genOfFuns_out_pair1 : Fuel -> Gen MaybeEmpty $ (1 b : Type) -> (a ** Y a b)
 59 | genOfFuns_out_pair1 = deriveGen
 60 | 
 61 | nonEmptyGen : Fuel -> Gen NonEmpty X
                            ^^^

